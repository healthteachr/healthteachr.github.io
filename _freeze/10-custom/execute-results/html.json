{
  "hash": "61db06b52882d2ca39ef4dcd4d520b79",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: \n  html:\n    self-contained: true\n---\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n# Customising Visualisations & Reports {#sec-custom}\n\n## Intended Learning Outcomes {#sec-ilo-custom .unnumbered}\n\nThe final chapter of ADS moves beyond the core skills needed to complete the course. Our aim in this chapter is to give you a sense of what is now available to you with your new-found R skills. There's a lot in this chapter, as we wanted to present an overview of the possibilities, although there are no exercises at the end. If you're enrolled on ADS, you may wish to prioritise the assessment this week and come back to this chapter at a later date.\n\n* Create and customise advanced types of plots\n* Structure data in report, presentation, and dashboard formats\n* Include linked figures, tables, and references\n\n## Walkthrough video {#sec-walkthrough-custom .unnumbered}\n\nThere is no walkthrough video of this chapter because it is not core content.\n\n## Visualisation {#sec-custom-viz}\n\n### Set-up {#sec-setup-custom-viz}\n\nFirst, create a new project for the work we'll do in this chapter named <code class='path'>10-advanced</code>. Second, open and save a new R Markdown document named `visualisations.Rmd`, delete the welcome text and load the required packages for this section. You will probably need to install several new packages.\n\n\n::: {.cell layout-align=\"center\" filename='Chapter packages'}\n\n```{.r .cell-code}\nlibrary(tidyverse)   # data wrangling functions\nlibrary(ggthemes)    # for themes\nlibrary(patchwork)   # for combining plots\nlibrary(plotly)      # for interactive plots\nlibrary(devtools)    # for package development tools\n# devtools::install_github(\"hrbrmstr/waffle\")\nlibrary(waffle)      # for waffle plots\nlibrary(ggbump)      # for bump plots\nlibrary(treemap)     # for treemap plots\nlibrary(ggwordcloud) # for word clouds\nlibrary(tidytext)    # for manipulating text for word clouds\nlibrary(sf)          # for mapping geoms\nlibrary(rnaturalearth) # for map data\nlibrary(rnaturalearthdata) # extra mapping data\nlibrary(gganimate)   # for animated plots\n\ntheme_set(theme_light())\n```\n:::\n\n\nYou'll need to make a folder called \"data\" and download data files into it: \n<a href=\"https://healthteachr.github.io/data/Function_and_PA_data.csv\" download>Function_and_PA_data.csv</a> and <a href=\"https://healthteachr.github.io/data/scottish_population.csv\" download>scottish_population.csv</a>.\n\nDownload the [ggplot2 cheat sheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf).\n\n\n### Defaults\n\nThe code below creates two familiar plots from @sec-viz), using the default (light) theme and palettes. First, load the data and set `condition_type` to a factor so you can control the order of the categories.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# update column specification\nct <- cols(condition_type = col_factor(levels = c(\"Joints\", \"Bones\", \"Muscles\", \"None\")))\n\n# load data\nfunction_data <- read_csv(file = \"data/Function_and_PA_data.csv\",\n                        col_types = ct)\n```\n:::\n\n\nNext, create a bar plot of number of participants by type of condition.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# create bar plot\nbar <- ggplot(data = function_data, \n              mapping = aes(x = condition_type,\n                            fill = condition_type)) +\n  geom_bar(show.legend = FALSE) +\n  labs(x = \"Type of condition\", \n       y = \"Count\",\n       title = \"Participants by condition\")\n```\n:::\n\n\nAnd create a scatterplot of gait speed by step count, distinguished by condition type.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#create scatterplot\npoint <- ggplot(data = function_data, \n                mapping = aes(x = gaitspeed, \n                              y = steps,\n                              color = condition_type)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = lm, formula = y~x) +\n  labs(x = \"Gait speed (m/s)\",\n       y = \"Number of steps\",\n       color = \"Type of condition\",\n       title = \"Gait speed by step count\")\n```\n:::\n\n\nFinally, combine the two plots using the `+` from <pkg>patchwork</pkg> to see the default styles for these plots.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbar + point\n```\n\n::: {.cell-output-display}\n![Default plot styles.](10-custom_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-note .try}\nTry changing the theme using built-in themes or customising the colours or linetypes with scale_* functions. See @sec-plotstyle for details.\n:::\n\n\n### Annotations\n\nIt's often useful to add annotations to a plot, for example, to highlight an important part of the plot or add labels. The `annotate()` function creates a specific geom at x- and y-coordinates you specify. \n\n#### Text annotations\n\nAdd a text annotation by setting the `geom` argument to \"text\" or \"label\" and adding a `label`. Labels have padding and a background, while text is just text.\n\n* Backslash-n `\\n` in the label text controls where the line breaks are. Try removing or changing the position of these to see what happens. \n* `x` and `y` control the coordinates of the label. You will likely have to play around with these values to get them right.\n* The argument `hjust` is the horizontal justification of text, and `vjust` is the vertical justification. The default values are 0.5, where the text is centred on the x and y coordinates. 0 will justify to the left and bottom, while 1 justifies to the right and top. \n* You can  change the `angle` of text, but not labels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbar +\n  # add left-justified text to the first bar\n  annotate(geom = \"text\",\n           label = \"Our goal is to\\nreduce this\\ncategory\",\n           x = 0.65, y = 32,\n           hjust = 0, vjust = 1, \n           color = \"white\", fontface = \"bold\",\n           angle = 45) +\n  # add a centred label to the fourth bar\n  annotate(geom = \"label\",\n           label = \"Our goal is\\nto increase this\\ncategory\",\n           x = 4, y = 30,\n           hjust = 0.5, vjust = 1, \n           color = \" darkturquoise\", fontface = \"bold\")\n```\n\n::: {.cell-output-display}\n![An example of annotation text and label.](10-custom_files/figure-html/annotate-text-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n::: {.callout-note .try}\n\nSee if you can work out how to make the figure below, starting with the following:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntibble(x = c(0, 0, 1, 1),\n       y = c(0, 1, 0, 1)) %>%\n  ggplot(aes(x, y)) +\n  geom_point(alpha = 0.25, size = 4, color = \"red\")\n```\n:::\n\n\nHint: you will need to add 1 label annotation and 8 separate text annotations.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-custom_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\" webex.hide='true'}\n::: {.callout-note collapse='true'}\n## Solution\n\n```{.r .cell-code}\ntibble(x = c(0, 0, 1, 1),\n       y = c(0, 1, 0, 1)) %>%\n  ggplot(aes(x, y)) +\n  geom_point(alpha = 0.25, size = 4, color = \"red\") +\n  annotate(\"label\", label = \"In the\\nmiddle\",\n           x = 0.5, y = 0.5,\n           fill = \"dodgerblue\", color = \"white\",\n           label.padding = unit(1, \"lines\"),\n           label.r = unit(1.5, \"lines\")) +\n  annotate(\"text\", label = \"Bottom\\nLeft\",\n           x = 0, y = 0, hjust = 0, vjust = 0) +\n  annotate(\"text\", label = \"Top\\nLeft\", \n           x = 0, y = 1, hjust = 0, vjust = 1) +\n  annotate(\"text\", label = \"Bottom\\nRight\",\n           x = 1, y = 0, hjust = 1, vjust = 0) +\n  annotate(\"text\", label = \"Top\\nRight\",\n           x = 1, y = 1, hjust = 1, vjust = 1) +\n  annotate(\"text\", label = \"45 degrees\",\n           x = 0, y = 0.5, hjust = 0, angle = 45) +\n  annotate(\"text\", label = \"90 degrees\",\n           x = 0.25, y = 0.5, angle = 90) +\n  annotate(\"text\", label = \"270 degrees\",\n           x = 0.75, y = 0.5, angle = 270)+\n  annotate(\"text\", label = \"-45 degrees\",\n           x = 1, y = 0.5, hjust = 1, angle = -45)\n```\n\n:::\n:::\n\n:::\n\n#### Other annotations\n\nYou can add other geoms to highlight parts of a plot. The example below adds a rectangle around a group of points, a text label, a straight arrow from the label to the rectangle, and a curved arrow from the label to an individual point.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npoint +\n  # add a rectangle surrounding high step counts\n  annotate(geom = \"rect\",\n           xmin = 1.06, xmax = 1.3,\n           ymin = 8600, ymax = 10000,\n           fill = \"transparent\", color = \"red\") +\n  # add a text label\n  annotate(\"text\",\n           x = 0.7, y = 7500,\n           label = \"outliers\") +\n  # add an line with an arrow from the text to the box\n  annotate(geom = \"segment\", \n           x = 0.75, y = 7500, \n           xend = 1.05, yend = 8600,\n           arrow = arrow(length = unit(0.5, \"lines\"))) +\n  # add a curved line with an arrow \n  # from the text to a gait speed outlier\n  annotate(geom = \"curve\", \n          x = 0.65, y = 7500, \n          xend = 0.525, yend = 3650,\n          curvature = 0.5,\n          arrow = arrow(length = unit(0.5, \"lines\")))\n```\n\n::: {.cell-output-display}\n![Example of annotations with the rect, text, segment, and curve geoms.](10-custom_files/figure-html/annotation-other-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nSee the <pkg>ggforce\", \"https://ggforce.data-imaginist.com/\")` package for more sophisticated options, such as highlighting a group of points with an ellipse. \n\n### Other Plots {#sec-other-plots}\n\n#### Frequency and density plots\n\nIn @sec-histogram, we showed you how to use a histogram to show the distribution of one continuous variable. You can also use frequency or density plots.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction_data <- read_csv(file = \"data/Function_and_PA_data.csv\",\n                        show_col_types = FALSE)\n\nggplot(function_data, aes(x = steps)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Histogram of steps.](10-custom_files/figure-html/histogram-example-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n##### Frequency plot {#sec-freqpoly}\n\nRather than plotting each bin as a bar, you can connect a line across the top of each bin using a frequency plot. The function `geom_freqpoly()` works the same as `geom_histogram()`, except it can't take a `fill` argument because it's just a line. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(function_data, aes(x = steps)) +\n  scale_x_continuous(name = \"Number of steps\",\n                     breaks = seq(0, 10000, 2500)) +\n  geom_freqpoly(boundary = 0, binwidth = 250, \n                color = \"black\")\n```\n\n::: {.cell-output-display}\n![Frequency plot of steps.](10-custom_files/figure-html/freqpoly-example-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n##### Density plot\n\nIf the distribution is smooth, a density plot is often a better way to show the distribution. A density plot doesn't need the `binwidth` or `boundary` arguments because it doesn't split the data into bins, but it can have `fill`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(function_data, aes(x = steps)) +\n  scale_x_continuous(name = \"Number of steps\",\n                     breaks = seq(0, 10000, 2500)) +\n  geom_density(fill = \"purple\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![Density plot of steps.](10-custom_files/figure-html/density-example-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n##### Test your understanding\n\nImagine you have a table of the [population for each country in the world](https://population.un.org/wpp/Download/Standard/Population/){target=\"_blank\"} with the columns `country` and `population`. We'll just look at the 76 countries with populations of less than a million.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-custom_files/figure-html/test-one-continuous-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-note .try}\n\n* What kind of plot is A? <select class='webex-select'><option value='blank'></option><option value='x'>geom_histogram</option><option value='x'>geom_freqpoly</option><option value='answer'>geom_density</option></select>\n* What kind of plot is B? <select class='webex-select'><option value='blank'></option><option value='answer'>geom_histogram</option><option value='x'>geom_freqpoly</option><option value='x'>geom_density</option></select>\n* What kind of plot is C? <select class='webex-select'><option value='blank'></option><option value='x'>geom_histogram</option><option value='answer'>geom_freqpoly</option><option value='x'>geom_density</option></select>\n:::\n\n\n#### Interactive Plots\n\nThe <pkg>plotly</pkg> package can be used to make interactive graphs. Assign your ggplot to a variable and then use the function `ggplotly()` on the plot object. Note that interactive plots only work in HTML files, not PDFs or Word files.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplotly(point)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-ed14ecca4569a9d4b8dd\" style=\"width:100%;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ed14ecca4569a9d4b8dd\">{\"x\":{\"data\":[{\"x\":[0.83836478000000003,0.77555239200000003,0.71216827599999999,0.92009043700000004,0.80093592400000002,0.65036332600000002,0.59051370599999997,0.96586561199999998,0.554273248,0.788815975,0.57464820100000003,0.95664054200000004,1.0884453059999999,0.97428625800000002,0.63780069399999995,1.0484796759999999,0.63237076999999997,0.70930778999999999,0.57180345099999996,0.578517795,0.65650772999999996,0.83256918199999996,0.55143874900000001,0.97024124899999997,1.2210328580000001,0.70503544799999995,1.0263193850000001,0.65406829099999997,0.93901771300000003,0.77375829200000001,0.58974653499999996,0.72461694499999996,1.071572661,0.65567123900000002,0.65328061599999998,0.67190897500000002,0.532339275,0.64257085300000005,0.84695088900000004,0.75359827300000004,0.85590910899999995,0.73612546899999998,1.1066321130000001,0.73262518600000004,0.56194239899999998,0.91679626700000005,0.83431190300000002],\"y\":[3961,1223,600,5852,5163,1070,3633,4636,2393,4087,280,5314,6538,6364,1584,7116,957,3484,2232,2909,1796,3541,1788,3134,6877,4738,5750,2638,4406,3827,1963,4153,8872,2344,3480,4694,3428,2409,5900,2826,4482,4348,6990,4819,930,3257,3194],\"text\":[\"gaitspeed: 0.8383648<br />steps: 3961<br />condition_type: Joints\",\"gaitspeed: 0.7755524<br />steps: 1223<br />condition_type: Joints\",\"gaitspeed: 0.7121683<br />steps:  600<br />condition_type: Joints\",\"gaitspeed: 0.9200904<br />steps: 5852<br />condition_type: Joints\",\"gaitspeed: 0.8009359<br />steps: 5163<br />condition_type: Joints\",\"gaitspeed: 0.6503633<br />steps: 1070<br />condition_type: Joints\",\"gaitspeed: 0.5905137<br />steps: 3633<br />condition_type: Joints\",\"gaitspeed: 0.9658656<br />steps: 4636<br />condition_type: Joints\",\"gaitspeed: 0.5542732<br />steps: 2393<br />condition_type: Joints\",\"gaitspeed: 0.7888160<br />steps: 4087<br />condition_type: Joints\",\"gaitspeed: 0.5746482<br />steps:  280<br />condition_type: Joints\",\"gaitspeed: 0.9566405<br />steps: 5314<br />condition_type: Joints\",\"gaitspeed: 1.0884453<br />steps: 6538<br />condition_type: Joints\",\"gaitspeed: 0.9742863<br />steps: 6364<br />condition_type: Joints\",\"gaitspeed: 0.6378007<br />steps: 1584<br />condition_type: Joints\",\"gaitspeed: 1.0484797<br />steps: 7116<br />condition_type: Joints\",\"gaitspeed: 0.6323708<br />steps:  957<br />condition_type: Joints\",\"gaitspeed: 0.7093078<br />steps: 3484<br />condition_type: Joints\",\"gaitspeed: 0.5718035<br />steps: 2232<br />condition_type: Joints\",\"gaitspeed: 0.5785178<br />steps: 2909<br />condition_type: Joints\",\"gaitspeed: 0.6565077<br />steps: 1796<br />condition_type: Joints\",\"gaitspeed: 0.8325692<br />steps: 3541<br />condition_type: Joints\",\"gaitspeed: 0.5514387<br />steps: 1788<br />condition_type: Joints\",\"gaitspeed: 0.9702412<br />steps: 3134<br />condition_type: Joints\",\"gaitspeed: 1.2210329<br />steps: 6877<br />condition_type: Joints\",\"gaitspeed: 0.7050354<br />steps: 4738<br />condition_type: Joints\",\"gaitspeed: 1.0263194<br />steps: 5750<br />condition_type: Joints\",\"gaitspeed: 0.6540683<br />steps: 2638<br />condition_type: Joints\",\"gaitspeed: 0.9390177<br />steps: 4406<br />condition_type: Joints\",\"gaitspeed: 0.7737583<br />steps: 3827<br />condition_type: Joints\",\"gaitspeed: 0.5897465<br />steps: 1963<br />condition_type: Joints\",\"gaitspeed: 0.7246169<br />steps: 4153<br />condition_type: Joints\",\"gaitspeed: 1.0715727<br />steps: 8872<br />condition_type: Joints\",\"gaitspeed: 0.6556712<br />steps: 2344<br />condition_type: Joints\",\"gaitspeed: 0.6532806<br />steps: 3480<br />condition_type: Joints\",\"gaitspeed: 0.6719090<br />steps: 4694<br />condition_type: Joints\",\"gaitspeed: 0.5323393<br />steps: 3428<br />condition_type: Joints\",\"gaitspeed: 0.6425709<br />steps: 2409<br />condition_type: Joints\",\"gaitspeed: 0.8469509<br />steps: 5900<br />condition_type: Joints\",\"gaitspeed: 0.7535983<br />steps: 2826<br />condition_type: Joints\",\"gaitspeed: 0.8559091<br />steps: 4482<br />condition_type: Joints\",\"gaitspeed: 0.7361255<br />steps: 4348<br />condition_type: Joints\",\"gaitspeed: 1.1066321<br />steps: 6990<br />condition_type: Joints\",\"gaitspeed: 0.7326252<br />steps: 4819<br />condition_type: Joints\",\"gaitspeed: 0.5619424<br />steps:  930<br />condition_type: Joints\",\"gaitspeed: 0.9167963<br />steps: 3257<br />condition_type: Joints\",\"gaitspeed: 0.8343119<br />steps: 3194<br />condition_type: Joints\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\"}},\"hoveron\":\"points\",\"name\":\"Joints\",\"legendgroup\":\"Joints\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.60893708499999999,0.93618559800000001,0.66401004799999996,0.73699295499999995,0.60409349199999995,0.66591858900000001,1.0177706479999999,0.72581064699999998,0.81638854699999996,0.60867512199999996,0.65166050200000003,0.62096214299999997],\"y\":[2821,4604,2653,3807,1407,2191,5521,2887,3869,5290,3147,1836],\"text\":[\"gaitspeed: 0.6089371<br />steps: 2821<br />condition_type: Bones\",\"gaitspeed: 0.9361856<br />steps: 4604<br />condition_type: Bones\",\"gaitspeed: 0.6640100<br />steps: 2653<br />condition_type: Bones\",\"gaitspeed: 0.7369930<br />steps: 3807<br />condition_type: Bones\",\"gaitspeed: 0.6040935<br />steps: 1407<br />condition_type: Bones\",\"gaitspeed: 0.6659186<br />steps: 2191<br />condition_type: Bones\",\"gaitspeed: 1.0177706<br />steps: 5521<br />condition_type: Bones\",\"gaitspeed: 0.7258106<br />steps: 2887<br />condition_type: Bones\",\"gaitspeed: 0.8163885<br />steps: 3869<br />condition_type: Bones\",\"gaitspeed: 0.6086751<br />steps: 5290<br />condition_type: Bones\",\"gaitspeed: 0.6516605<br />steps: 3147<br />condition_type: Bones\",\"gaitspeed: 0.6209621<br />steps: 1836<br />condition_type: Bones\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(124,174,0,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(124,174,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Bones\",\"legendgroup\":\"Bones\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.919292212,1.0972102880000001,0.56474530700000003,0.74496662599999997,0.88028967400000002,0.734286785],\"y\":[3202,7592,3147,3898,5952,4000],\"text\":[\"gaitspeed: 0.9192922<br />steps: 3202<br />condition_type: Muscles\",\"gaitspeed: 1.0972103<br />steps: 7592<br />condition_type: Muscles\",\"gaitspeed: 0.5647453<br />steps: 3147<br />condition_type: Muscles\",\"gaitspeed: 0.7449666<br />steps: 3898<br />condition_type: Muscles\",\"gaitspeed: 0.8802897<br />steps: 5952<br />condition_type: Muscles\",\"gaitspeed: 0.7342868<br />steps: 4000<br />condition_type: Muscles\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,191,196,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,196,1)\"}},\"hoveron\":\"points\",\"name\":\"Muscles\",\"legendgroup\":\"Muscles\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.97599476600000001,1.2306723589999999,1.163457513,0.86477488300000005,1.224998236,1.0560476780000001,1.1614196299999999,1.0529191490000001,0.98576402699999999,1.03841877,1.256963968,1.1290870900000001,1.2211111779999999,1.1414847370000001,1.2685929540000001,1.176458716,1.1202682260000001,1.2974594829999999,1.2686234709999999,1.1397193670000001,1.2347227329999999,1.2927018400000001,0.95120686300000001,0.90216153899999996,0.91237455599999995,1.1154894829999999,0.84450739600000002,1.174041033,0.95428532399999999,1.286520004,1.265285969,1.184998035,1.051127672,1.2256399389999999,1.225120902],\"y\":[4563,6016,7398,5893,6926,6514,8527,8393,4744,7487,9829,8164,7265,5156,8720,8342,5891,7032,7748,5352,5903,7114,5541,2664,4737,6034,3787,6903,3901,8338,6426,6901,6134,7800,7968],\"text\":[\"gaitspeed: 0.9759948<br />steps: 4563<br />condition_type: None\",\"gaitspeed: 1.2306724<br />steps: 6016<br />condition_type: None\",\"gaitspeed: 1.1634575<br />steps: 7398<br />condition_type: None\",\"gaitspeed: 0.8647749<br />steps: 5893<br />condition_type: None\",\"gaitspeed: 1.2249982<br />steps: 6926<br />condition_type: None\",\"gaitspeed: 1.0560477<br />steps: 6514<br />condition_type: None\",\"gaitspeed: 1.1614196<br />steps: 8527<br />condition_type: None\",\"gaitspeed: 1.0529191<br />steps: 8393<br />condition_type: None\",\"gaitspeed: 0.9857640<br />steps: 4744<br />condition_type: None\",\"gaitspeed: 1.0384188<br />steps: 7487<br />condition_type: None\",\"gaitspeed: 1.2569640<br />steps: 9829<br />condition_type: None\",\"gaitspeed: 1.1290871<br />steps: 8164<br />condition_type: None\",\"gaitspeed: 1.2211112<br />steps: 7265<br />condition_type: None\",\"gaitspeed: 1.1414847<br />steps: 5156<br />condition_type: None\",\"gaitspeed: 1.2685930<br />steps: 8720<br />condition_type: None\",\"gaitspeed: 1.1764587<br />steps: 8342<br />condition_type: None\",\"gaitspeed: 1.1202682<br />steps: 5891<br />condition_type: None\",\"gaitspeed: 1.2974595<br />steps: 7032<br />condition_type: None\",\"gaitspeed: 1.2686235<br />steps: 7748<br />condition_type: None\",\"gaitspeed: 1.1397194<br />steps: 5352<br />condition_type: None\",\"gaitspeed: 1.2347227<br />steps: 5903<br />condition_type: None\",\"gaitspeed: 1.2927018<br />steps: 7114<br />condition_type: None\",\"gaitspeed: 0.9512069<br />steps: 5541<br />condition_type: None\",\"gaitspeed: 0.9021615<br />steps: 2664<br />condition_type: None\",\"gaitspeed: 0.9123746<br />steps: 4737<br />condition_type: None\",\"gaitspeed: 1.1154895<br />steps: 6034<br />condition_type: None\",\"gaitspeed: 0.8445074<br />steps: 3787<br />condition_type: None\",\"gaitspeed: 1.1740410<br />steps: 6903<br />condition_type: None\",\"gaitspeed: 0.9542853<br />steps: 3901<br />condition_type: None\",\"gaitspeed: 1.2865200<br />steps: 8338<br />condition_type: None\",\"gaitspeed: 1.2652860<br />steps: 6426<br />condition_type: None\",\"gaitspeed: 1.1849980<br />steps: 6901<br />condition_type: None\",\"gaitspeed: 1.0511277<br />steps: 6134<br />condition_type: None\",\"gaitspeed: 1.2256399<br />steps: 7800<br />condition_type: None\",\"gaitspeed: 1.2251209<br />steps: 7968<br />condition_type: None\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(199,124,255,1)\",\"opacity\":0.5,\"size\":5.6692913385826778,\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(199,124,255,1)\"}},\"hoveron\":\"points\",\"name\":\"None\",\"legendgroup\":\"None\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.532339275,0.5410569152911392,0.5497745555822785,0.5584921958734177,0.567209836164557,0.5759274764556962,0.58464511674683539,0.5933627570379747,0.60208039732911389,0.6107980376202532,0.61951567791139239,0.6282333182025317,0.63695095849367089,0.64566859878481009,0.65438623907594939,0.66310387936708859,0.67182151965822789,0.68053915994936709,0.6892568002405064,0.69797444053164559,0.70669208082278478,0.71540972111392409,0.72412736140506329,0.73284500169620259,0.74156264198734179,0.75028028227848109,0.75899792256962029,0.76771556286075948,0.77643320315189879,0.78515084344303798,0.79386848373417718,0.80258612402531648,0.81130376431645579,0.82002140460759498,0.82873904489873418,0.83745668518987348,0.84617432548101268,0.85489196577215187,0.86360960606329118,0.87232724635443049,0.88104488664556968,0.88976252693670888,0.89848016722784818,0.90719780751898738,0.91591544781012657,0.92463308810126588,0.93335072839240518,0.94206836868354438,0.95078600897468357,0.95950364926582288,0.96822128955696207,0.97693892984810127,0.98565657013924057,0.99437421043037988,1.003091850721519,1.0118094910126583,1.0205271313037976,1.0292447715949367,1.037962411886076,1.0466800521772153,1.0553976924683544,1.0641153327594939,1.072832973050633,1.0815506133417723,1.0902682536329116,1.0989858939240507,1.10770353421519,1.1164211745063293,1.1251388147974684,1.1338564550886077,1.142574095379747,1.1512917356708861,1.1600093759620254,1.1687270162531647,1.1774446565443037,1.1861622968354433,1.1948799371265824,1.2035975774177214,1.212315217708861,1.2210328580000001],\"y\":[1599.9197941101406,1675.8842868894931,1751.8487796688473,1827.8132724481998,1903.7777652275531,1979.7422580069056,2055.706750786258,2131.6712435656123,2207.6357363449647,2283.600229124318,2359.5647219036705,2435.5292146830238,2511.4937074623772,2587.4582002417296,2663.422693021083,2739.3871858004354,2815.3516785797897,2891.3161713591421,2967.2806641384955,3043.2451569178479,3119.2096496972003,3195.1741424765546,3271.138635255907,3347.1031280352604,3423.0676208146128,3499.0321135939662,3574.9966063733195,3650.961099152672,3726.9255919320253,3802.8900847113778,3878.8545774907302,3954.8190702700845,4030.7835630494378,4106.7480558287898,4182.7125486081422,4258.6770413874965,4334.6415341668489,4410.6060269462014,4486.5705197255556,4562.5350125049081,4638.4995052842623,4714.4639980636148,4790.4284908429672,4866.3929836223197,4942.3574764016721,5018.3219691810264,5094.2864619603806,5170.2509547397331,5246.2154475190855,5322.1799402984379,5398.1444330777904,5474.1089258571428,5550.0734186364971,5626.0379114158513,5702.002404195202,5777.9668969745562,5853.9313897539087,5929.8958825332611,6005.8603753126154,6081.8248680919678,6157.7893608713202,6233.7538536506763,6309.7183464300269,6385.6828392093812,6461.6473319887336,6537.6118247680861,6613.5763175474403,6689.5408103267928,6765.5053031061452,6841.4697958854977,6917.4342886648519,6993.3987814442044,7069.3632742235568,7145.3277670029111,7221.2922597822617,7297.2567525616178,7373.2212453409702,7449.1857381203208,7525.1502308996769,7601.1147236790275],\"text\":[\"gaitspeed: 0.5323393<br />steps: 1599.920<br />condition_type: Joints\",\"gaitspeed: 0.5410569<br />steps: 1675.884<br />condition_type: Joints\",\"gaitspeed: 0.5497746<br />steps: 1751.849<br />condition_type: Joints\",\"gaitspeed: 0.5584922<br />steps: 1827.813<br />condition_type: Joints\",\"gaitspeed: 0.5672098<br />steps: 1903.778<br />condition_type: Joints\",\"gaitspeed: 0.5759275<br />steps: 1979.742<br />condition_type: Joints\",\"gaitspeed: 0.5846451<br />steps: 2055.707<br />condition_type: Joints\",\"gaitspeed: 0.5933628<br />steps: 2131.671<br />condition_type: Joints\",\"gaitspeed: 0.6020804<br />steps: 2207.636<br />condition_type: Joints\",\"gaitspeed: 0.6107980<br />steps: 2283.600<br />condition_type: Joints\",\"gaitspeed: 0.6195157<br />steps: 2359.565<br />condition_type: Joints\",\"gaitspeed: 0.6282333<br />steps: 2435.529<br />condition_type: Joints\",\"gaitspeed: 0.6369510<br />steps: 2511.494<br />condition_type: Joints\",\"gaitspeed: 0.6456686<br />steps: 2587.458<br />condition_type: Joints\",\"gaitspeed: 0.6543862<br />steps: 2663.423<br />condition_type: Joints\",\"gaitspeed: 0.6631039<br />steps: 2739.387<br />condition_type: Joints\",\"gaitspeed: 0.6718215<br />steps: 2815.352<br />condition_type: Joints\",\"gaitspeed: 0.6805392<br />steps: 2891.316<br />condition_type: Joints\",\"gaitspeed: 0.6892568<br />steps: 2967.281<br />condition_type: Joints\",\"gaitspeed: 0.6979744<br />steps: 3043.245<br />condition_type: Joints\",\"gaitspeed: 0.7066921<br />steps: 3119.210<br />condition_type: Joints\",\"gaitspeed: 0.7154097<br />steps: 3195.174<br />condition_type: Joints\",\"gaitspeed: 0.7241274<br />steps: 3271.139<br />condition_type: Joints\",\"gaitspeed: 0.7328450<br />steps: 3347.103<br />condition_type: Joints\",\"gaitspeed: 0.7415626<br />steps: 3423.068<br />condition_type: Joints\",\"gaitspeed: 0.7502803<br />steps: 3499.032<br />condition_type: Joints\",\"gaitspeed: 0.7589979<br />steps: 3574.997<br />condition_type: Joints\",\"gaitspeed: 0.7677156<br />steps: 3650.961<br />condition_type: Joints\",\"gaitspeed: 0.7764332<br />steps: 3726.926<br />condition_type: Joints\",\"gaitspeed: 0.7851508<br />steps: 3802.890<br />condition_type: Joints\",\"gaitspeed: 0.7938685<br />steps: 3878.855<br />condition_type: Joints\",\"gaitspeed: 0.8025861<br />steps: 3954.819<br />condition_type: Joints\",\"gaitspeed: 0.8113038<br />steps: 4030.784<br />condition_type: Joints\",\"gaitspeed: 0.8200214<br />steps: 4106.748<br />condition_type: Joints\",\"gaitspeed: 0.8287390<br />steps: 4182.713<br />condition_type: Joints\",\"gaitspeed: 0.8374567<br />steps: 4258.677<br />condition_type: Joints\",\"gaitspeed: 0.8461743<br />steps: 4334.642<br />condition_type: Joints\",\"gaitspeed: 0.8548920<br />steps: 4410.606<br />condition_type: Joints\",\"gaitspeed: 0.8636096<br />steps: 4486.571<br />condition_type: Joints\",\"gaitspeed: 0.8723272<br />steps: 4562.535<br />condition_type: Joints\",\"gaitspeed: 0.8810449<br />steps: 4638.500<br />condition_type: Joints\",\"gaitspeed: 0.8897625<br />steps: 4714.464<br />condition_type: Joints\",\"gaitspeed: 0.8984802<br />steps: 4790.428<br />condition_type: Joints\",\"gaitspeed: 0.9071978<br />steps: 4866.393<br />condition_type: Joints\",\"gaitspeed: 0.9159154<br />steps: 4942.357<br />condition_type: Joints\",\"gaitspeed: 0.9246331<br />steps: 5018.322<br />condition_type: Joints\",\"gaitspeed: 0.9333507<br />steps: 5094.286<br />condition_type: Joints\",\"gaitspeed: 0.9420684<br />steps: 5170.251<br />condition_type: Joints\",\"gaitspeed: 0.9507860<br />steps: 5246.215<br />condition_type: Joints\",\"gaitspeed: 0.9595036<br />steps: 5322.180<br />condition_type: Joints\",\"gaitspeed: 0.9682213<br />steps: 5398.144<br />condition_type: Joints\",\"gaitspeed: 0.9769389<br />steps: 5474.109<br />condition_type: Joints\",\"gaitspeed: 0.9856566<br />steps: 5550.073<br />condition_type: Joints\",\"gaitspeed: 0.9943742<br />steps: 5626.038<br />condition_type: Joints\",\"gaitspeed: 1.0030919<br />steps: 5702.002<br />condition_type: Joints\",\"gaitspeed: 1.0118095<br />steps: 5777.967<br />condition_type: Joints\",\"gaitspeed: 1.0205271<br />steps: 5853.931<br />condition_type: Joints\",\"gaitspeed: 1.0292448<br />steps: 5929.896<br />condition_type: Joints\",\"gaitspeed: 1.0379624<br />steps: 6005.860<br />condition_type: Joints\",\"gaitspeed: 1.0466801<br />steps: 6081.825<br />condition_type: Joints\",\"gaitspeed: 1.0553977<br />steps: 6157.789<br />condition_type: Joints\",\"gaitspeed: 1.0641153<br />steps: 6233.754<br />condition_type: Joints\",\"gaitspeed: 1.0728330<br />steps: 6309.718<br />condition_type: Joints\",\"gaitspeed: 1.0815506<br />steps: 6385.683<br />condition_type: Joints\",\"gaitspeed: 1.0902683<br />steps: 6461.647<br />condition_type: Joints\",\"gaitspeed: 1.0989859<br />steps: 6537.612<br />condition_type: Joints\",\"gaitspeed: 1.1077035<br />steps: 6613.576<br />condition_type: Joints\",\"gaitspeed: 1.1164212<br />steps: 6689.541<br />condition_type: Joints\",\"gaitspeed: 1.1251388<br />steps: 6765.505<br />condition_type: Joints\",\"gaitspeed: 1.1338565<br />steps: 6841.470<br />condition_type: Joints\",\"gaitspeed: 1.1425741<br />steps: 6917.434<br />condition_type: Joints\",\"gaitspeed: 1.1512917<br />steps: 6993.399<br />condition_type: Joints\",\"gaitspeed: 1.1600094<br />steps: 7069.363<br />condition_type: Joints\",\"gaitspeed: 1.1687270<br />steps: 7145.328<br />condition_type: Joints\",\"gaitspeed: 1.1774447<br />steps: 7221.292<br />condition_type: Joints\",\"gaitspeed: 1.1861623<br />steps: 7297.257<br />condition_type: Joints\",\"gaitspeed: 1.1948799<br />steps: 7373.221<br />condition_type: Joints\",\"gaitspeed: 1.2035976<br />steps: 7449.186<br />condition_type: Joints\",\"gaitspeed: 1.2123152<br />steps: 7525.150<br />condition_type: Joints\",\"gaitspeed: 1.2210329<br />steps: 7601.115<br />condition_type: Joints\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"Joints\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"Joints\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.60409349199999995,0.60932991169620243,0.61456633139240502,0.6198027510886075,0.62503917078481008,0.63027559048101256,0.63551201017721515,0.64074842987341762,0.64598484956962021,0.65122126926582269,0.65645768896202528,0.66169410865822775,0.66693052835443034,0.67216694805063282,0.67740336774683541,0.68263978744303788,0.68787620713924047,0.69311262683544295,0.69834904653164553,0.70358546622784801,0.7088218859240506,0.71405830562025308,0.71929472531645566,0.72453114501265814,0.72976756470886073,0.7350039844050632,0.74024040410126579,0.74547682379746827,0.75071324349367086,0.75594966318987333,0.76118608288607592,0.7664225025822784,0.77165892227848099,0.77689534197468346,0.78213176167088605,0.78736818136708853,0.79260460106329111,0.79784102075949359,0.80307744045569618,0.80831386015189866,0.81355027984810124,0.81878669954430372,0.82402311924050631,0.82925953893670878,0.83449595863291137,0.83973237832911385,0.84496879802531644,0.85020521772151891,0.85544163741772139,0.86067805711392398,0.86591447681012657,0.87115089650632904,0.87638731620253152,0.88162373589873411,0.88686015559493669,0.89209657529113917,0.89733299498734165,0.90256941468354424,0.90780583437974682,0.9130422540759493,0.91827867377215178,0.92351509346835436,0.92875151316455695,0.93398793286075943,0.93922435255696191,0.94446077225316449,0.94969719194936708,0.95493361164556956,0.96017003134177203,0.96540645103797462,0.97064287073417721,0.97587929043037969,0.98111571012658216,0.98635212982278475,0.99158854951898734,0.99682496921518982,1.0020613889113923,1.007297808607595,1.0125342283037975,1.0177706479999999],\"y\":[2583.3985092470039,2616.9830002922417,2650.5674913374796,2684.1519823827175,2717.7364734279563,2751.3209644731942,2784.9054555184321,2818.4899465636699,2852.0744376089087,2885.6589286541466,2919.2434196993845,2952.8279107446224,2986.4124017898612,3019.9968928350982,3053.5813838803369,3087.1658749255748,3120.7503659708127,3154.3348570160506,3187.9193480612894,3221.5038391065273,3255.0883301517651,3288.672821197003,3322.2573122422418,3355.8418032874797,3389.4262943327176,3423.0107853779555,3456.5952764231943,3490.1797674684312,3523.76425851367,3557.3487495589079,3590.9332406041458,3624.5177316493837,3658.1022226946225,3691.6867137398604,3725.2712047850982,3758.8556958303361,3792.4401868755749,3826.0246779208128,3859.6091689660507,3893.1936600112886,3926.7781510565273,3960.3626421017643,3993.9471331470031,4027.531624192241,4061.1161152374789,4094.7006062827168,4128.2850973279556,4161.8695883731934,4195.4540794184313,4229.0385704636692,4262.623061508908,4296.2075525541459,4329.7920435993829,4363.3765346446216,4396.9610256898604,4430.5455167350974,4464.1300077803353,4497.7144988255741,4531.298989870812,4564.8834809160498,4598.4679719612877,4632.0524630065265,4665.6369540517644,4699.2214450970023,4732.8059361422402,4766.390427187479,4799.9749182327168,4833.5594092779547,4867.1439003231926,4900.7283913684305,4934.3128824136693,4967.8973734589072,5001.4818645041451,5035.0663555493829,5068.6508465946217,5102.2353376398596,5135.8198286850966,5169.4043197303363,5202.9888107755742,5236.573301820812],\"text\":[\"gaitspeed: 0.6040935<br />steps: 2583.399<br />condition_type: Bones\",\"gaitspeed: 0.6093299<br />steps: 2616.983<br />condition_type: Bones\",\"gaitspeed: 0.6145663<br />steps: 2650.567<br />condition_type: Bones\",\"gaitspeed: 0.6198028<br />steps: 2684.152<br />condition_type: Bones\",\"gaitspeed: 0.6250392<br />steps: 2717.736<br />condition_type: Bones\",\"gaitspeed: 0.6302756<br />steps: 2751.321<br />condition_type: Bones\",\"gaitspeed: 0.6355120<br />steps: 2784.905<br />condition_type: Bones\",\"gaitspeed: 0.6407484<br />steps: 2818.490<br />condition_type: Bones\",\"gaitspeed: 0.6459848<br />steps: 2852.074<br />condition_type: Bones\",\"gaitspeed: 0.6512213<br />steps: 2885.659<br />condition_type: Bones\",\"gaitspeed: 0.6564577<br />steps: 2919.243<br />condition_type: Bones\",\"gaitspeed: 0.6616941<br />steps: 2952.828<br />condition_type: Bones\",\"gaitspeed: 0.6669305<br />steps: 2986.412<br />condition_type: Bones\",\"gaitspeed: 0.6721669<br />steps: 3019.997<br />condition_type: Bones\",\"gaitspeed: 0.6774034<br />steps: 3053.581<br />condition_type: Bones\",\"gaitspeed: 0.6826398<br />steps: 3087.166<br />condition_type: Bones\",\"gaitspeed: 0.6878762<br />steps: 3120.750<br />condition_type: Bones\",\"gaitspeed: 0.6931126<br />steps: 3154.335<br />condition_type: Bones\",\"gaitspeed: 0.6983490<br />steps: 3187.919<br />condition_type: Bones\",\"gaitspeed: 0.7035855<br />steps: 3221.504<br />condition_type: Bones\",\"gaitspeed: 0.7088219<br />steps: 3255.088<br />condition_type: Bones\",\"gaitspeed: 0.7140583<br />steps: 3288.673<br />condition_type: Bones\",\"gaitspeed: 0.7192947<br />steps: 3322.257<br />condition_type: Bones\",\"gaitspeed: 0.7245311<br />steps: 3355.842<br />condition_type: Bones\",\"gaitspeed: 0.7297676<br />steps: 3389.426<br />condition_type: Bones\",\"gaitspeed: 0.7350040<br />steps: 3423.011<br />condition_type: Bones\",\"gaitspeed: 0.7402404<br />steps: 3456.595<br />condition_type: Bones\",\"gaitspeed: 0.7454768<br />steps: 3490.180<br />condition_type: Bones\",\"gaitspeed: 0.7507132<br />steps: 3523.764<br />condition_type: Bones\",\"gaitspeed: 0.7559497<br />steps: 3557.349<br />condition_type: Bones\",\"gaitspeed: 0.7611861<br />steps: 3590.933<br />condition_type: Bones\",\"gaitspeed: 0.7664225<br />steps: 3624.518<br />condition_type: Bones\",\"gaitspeed: 0.7716589<br />steps: 3658.102<br />condition_type: Bones\",\"gaitspeed: 0.7768953<br />steps: 3691.687<br />condition_type: Bones\",\"gaitspeed: 0.7821318<br />steps: 3725.271<br />condition_type: Bones\",\"gaitspeed: 0.7873682<br />steps: 3758.856<br />condition_type: Bones\",\"gaitspeed: 0.7926046<br />steps: 3792.440<br />condition_type: Bones\",\"gaitspeed: 0.7978410<br />steps: 3826.025<br />condition_type: Bones\",\"gaitspeed: 0.8030774<br />steps: 3859.609<br />condition_type: Bones\",\"gaitspeed: 0.8083139<br />steps: 3893.194<br />condition_type: Bones\",\"gaitspeed: 0.8135503<br />steps: 3926.778<br />condition_type: Bones\",\"gaitspeed: 0.8187867<br />steps: 3960.363<br />condition_type: Bones\",\"gaitspeed: 0.8240231<br />steps: 3993.947<br />condition_type: Bones\",\"gaitspeed: 0.8292595<br />steps: 4027.532<br />condition_type: Bones\",\"gaitspeed: 0.8344960<br />steps: 4061.116<br />condition_type: Bones\",\"gaitspeed: 0.8397324<br />steps: 4094.701<br />condition_type: Bones\",\"gaitspeed: 0.8449688<br />steps: 4128.285<br />condition_type: Bones\",\"gaitspeed: 0.8502052<br />steps: 4161.870<br />condition_type: Bones\",\"gaitspeed: 0.8554416<br />steps: 4195.454<br />condition_type: Bones\",\"gaitspeed: 0.8606781<br />steps: 4229.039<br />condition_type: Bones\",\"gaitspeed: 0.8659145<br />steps: 4262.623<br />condition_type: Bones\",\"gaitspeed: 0.8711509<br />steps: 4296.208<br />condition_type: Bones\",\"gaitspeed: 0.8763873<br />steps: 4329.792<br />condition_type: Bones\",\"gaitspeed: 0.8816237<br />steps: 4363.377<br />condition_type: Bones\",\"gaitspeed: 0.8868602<br />steps: 4396.961<br />condition_type: Bones\",\"gaitspeed: 0.8920966<br />steps: 4430.546<br />condition_type: Bones\",\"gaitspeed: 0.8973330<br />steps: 4464.130<br />condition_type: Bones\",\"gaitspeed: 0.9025694<br />steps: 4497.714<br />condition_type: Bones\",\"gaitspeed: 0.9078058<br />steps: 4531.299<br />condition_type: Bones\",\"gaitspeed: 0.9130423<br />steps: 4564.883<br />condition_type: Bones\",\"gaitspeed: 0.9182787<br />steps: 4598.468<br />condition_type: Bones\",\"gaitspeed: 0.9235151<br />steps: 4632.052<br />condition_type: Bones\",\"gaitspeed: 0.9287515<br />steps: 4665.637<br />condition_type: Bones\",\"gaitspeed: 0.9339879<br />steps: 4699.221<br />condition_type: Bones\",\"gaitspeed: 0.9392244<br />steps: 4732.806<br />condition_type: Bones\",\"gaitspeed: 0.9444608<br />steps: 4766.390<br />condition_type: Bones\",\"gaitspeed: 0.9496972<br />steps: 4799.975<br />condition_type: Bones\",\"gaitspeed: 0.9549336<br />steps: 4833.559<br />condition_type: Bones\",\"gaitspeed: 0.9601700<br />steps: 4867.144<br />condition_type: Bones\",\"gaitspeed: 0.9654065<br />steps: 4900.728<br />condition_type: Bones\",\"gaitspeed: 0.9706429<br />steps: 4934.313<br />condition_type: Bones\",\"gaitspeed: 0.9758793<br />steps: 4967.897<br />condition_type: Bones\",\"gaitspeed: 0.9811157<br />steps: 5001.482<br />condition_type: Bones\",\"gaitspeed: 0.9863521<br />steps: 5035.066<br />condition_type: Bones\",\"gaitspeed: 0.9915885<br />steps: 5068.651<br />condition_type: Bones\",\"gaitspeed: 0.9968250<br />steps: 5102.235<br />condition_type: Bones\",\"gaitspeed: 1.0020614<br />steps: 5135.820<br />condition_type: Bones\",\"gaitspeed: 1.0072978<br />steps: 5169.404<br />condition_type: Bones\",\"gaitspeed: 1.0125342<br />steps: 5202.989<br />condition_type: Bones\",\"gaitspeed: 1.0177706<br />steps: 5236.573<br />condition_type: Bones\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"Bones\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(124,174,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"Bones\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.56474530700000003,0.57148537005063293,0.57822543310126584,0.58496549615189875,0.59170555920253165,0.59844562225316456,0.60518568530379746,0.61192574835443037,0.61866581140506338,0.62540587445569629,0.63214593750632919,0.6388860005569621,0.645626063607595,0.65236612665822791,0.65910618970886081,0.66584625275949372,0.67258631581012662,0.67932637886075953,0.68606644191139243,0.69280650496202534,0.69954656801265824,0.70628663106329115,0.71302669411392405,0.71976675716455696,0.72650682021518986,0.73324688326582277,0.73998694631645567,0.74672700936708869,0.7534670724177216,0.7602071354683545,0.76694719851898741,0.77368726156962031,0.78042732462025322,0.78716738767088612,0.79390745072151903,0.80064751377215193,0.80738757682278484,0.81412763987341774,0.82086770292405076,0.82760776597468366,0.83434782902531657,0.84108789207594947,0.84782795512658238,0.85456801817721528,0.86130808122784819,0.86804814427848109,0.874788207329114,0.8815282703797469,0.88826833343037981,0.89500839648101271,0.90174845953164562,0.90848852258227852,0.91522858563291143,0.92196864868354433,0.92870871173417724,0.93544877478481014,0.94218883783544305,0.94892890088607595,0.95566896393670886,0.96240902698734176,0.96914909003797478,0.97588915308860769,0.98262921613924059,0.9893692791898735,0.9961093422405064,1.0028494052911392,1.0095894683417721,1.016329531392405,1.0230695944430379,1.029809657493671,1.0365497205443039,1.0432897835949368,1.0500298466455698,1.0567699096962027,1.0635099727468356,1.0702500357974685,1.0769900988481014,1.0837301618987343,1.0904702249493672,1.0972102880000001],\"y\":[2716.8667646300582,2766.7546871402437,2816.6426096504292,2866.5305321606156,2916.4184546708011,2966.3063771809875,3016.194299691173,3066.0822222013585,3115.9701447115458,3165.8580672217313,3215.7459897319177,3265.6339122421032,3315.5218347522887,3365.4097572624751,3415.2976797726606,3465.185602282847,3515.0735247930324,3564.9614473032179,3614.8493698134043,3664.7372923235898,3714.6252148337762,3764.5131373439617,3814.4010598541481,3864.2889823643336,3914.1769048745191,3964.0648273847055,4013.952749894891,4063.8406724050774,4113.7285949152638,4163.6165174254493,4213.5044399356357,4263.3923624458212,4313.2802849560076,4363.1682074661931,4413.0561299763785,4462.9440524865649,4512.8319749967504,4562.7198975069368,4612.6078200171232,4662.4957425273087,4712.3836650374951,4762.2715875476806,4812.159510057867,4862.0474325680525,4911.935355078238,4961.8232775884244,5011.7112000986099,5061.5991226087963,5111.4870451189818,5161.3749676291673,5211.2628901393537,5261.1508126495391,5311.0387351597255,5360.926657669911,5410.8145801800974,5460.7025026902829,5510.5904252004684,5560.4783477106548,5610.3662702208403,5660.2541927310267,5710.1421152412131,5760.0300377513986,5809.917960261585,5859.8058827717705,5909.6938052819569,5959.5817277921415,6009.469650302327,6059.3575728125134,6109.2454953226988,6159.1334178328871,6209.0213403430726,6258.909262853258,6308.7971853634444,6358.6851078736299,6408.5730303838163,6458.4609528940018,6508.3488754041873,6558.2367979143737,6608.1247204245592,6658.0126429347456],\"text\":[\"gaitspeed: 0.5647453<br />steps: 2716.867<br />condition_type: Muscles\",\"gaitspeed: 0.5714854<br />steps: 2766.755<br />condition_type: Muscles\",\"gaitspeed: 0.5782254<br />steps: 2816.643<br />condition_type: Muscles\",\"gaitspeed: 0.5849655<br />steps: 2866.531<br />condition_type: Muscles\",\"gaitspeed: 0.5917056<br />steps: 2916.418<br />condition_type: Muscles\",\"gaitspeed: 0.5984456<br />steps: 2966.306<br />condition_type: Muscles\",\"gaitspeed: 0.6051857<br />steps: 3016.194<br />condition_type: Muscles\",\"gaitspeed: 0.6119257<br />steps: 3066.082<br />condition_type: Muscles\",\"gaitspeed: 0.6186658<br />steps: 3115.970<br />condition_type: Muscles\",\"gaitspeed: 0.6254059<br />steps: 3165.858<br />condition_type: Muscles\",\"gaitspeed: 0.6321459<br />steps: 3215.746<br />condition_type: Muscles\",\"gaitspeed: 0.6388860<br />steps: 3265.634<br />condition_type: Muscles\",\"gaitspeed: 0.6456261<br />steps: 3315.522<br />condition_type: Muscles\",\"gaitspeed: 0.6523661<br />steps: 3365.410<br />condition_type: Muscles\",\"gaitspeed: 0.6591062<br />steps: 3415.298<br />condition_type: Muscles\",\"gaitspeed: 0.6658463<br />steps: 3465.186<br />condition_type: Muscles\",\"gaitspeed: 0.6725863<br />steps: 3515.074<br />condition_type: Muscles\",\"gaitspeed: 0.6793264<br />steps: 3564.961<br />condition_type: Muscles\",\"gaitspeed: 0.6860664<br />steps: 3614.849<br />condition_type: Muscles\",\"gaitspeed: 0.6928065<br />steps: 3664.737<br />condition_type: Muscles\",\"gaitspeed: 0.6995466<br />steps: 3714.625<br />condition_type: Muscles\",\"gaitspeed: 0.7062866<br />steps: 3764.513<br />condition_type: Muscles\",\"gaitspeed: 0.7130267<br />steps: 3814.401<br />condition_type: Muscles\",\"gaitspeed: 0.7197668<br />steps: 3864.289<br />condition_type: Muscles\",\"gaitspeed: 0.7265068<br />steps: 3914.177<br />condition_type: Muscles\",\"gaitspeed: 0.7332469<br />steps: 3964.065<br />condition_type: Muscles\",\"gaitspeed: 0.7399869<br />steps: 4013.953<br />condition_type: Muscles\",\"gaitspeed: 0.7467270<br />steps: 4063.841<br />condition_type: Muscles\",\"gaitspeed: 0.7534671<br />steps: 4113.729<br />condition_type: Muscles\",\"gaitspeed: 0.7602071<br />steps: 4163.617<br />condition_type: Muscles\",\"gaitspeed: 0.7669472<br />steps: 4213.504<br />condition_type: Muscles\",\"gaitspeed: 0.7736873<br />steps: 4263.392<br />condition_type: Muscles\",\"gaitspeed: 0.7804273<br />steps: 4313.280<br />condition_type: Muscles\",\"gaitspeed: 0.7871674<br />steps: 4363.168<br />condition_type: Muscles\",\"gaitspeed: 0.7939075<br />steps: 4413.056<br />condition_type: Muscles\",\"gaitspeed: 0.8006475<br />steps: 4462.944<br />condition_type: Muscles\",\"gaitspeed: 0.8073876<br />steps: 4512.832<br />condition_type: Muscles\",\"gaitspeed: 0.8141276<br />steps: 4562.720<br />condition_type: Muscles\",\"gaitspeed: 0.8208677<br />steps: 4612.608<br />condition_type: Muscles\",\"gaitspeed: 0.8276078<br />steps: 4662.496<br />condition_type: Muscles\",\"gaitspeed: 0.8343478<br />steps: 4712.384<br />condition_type: Muscles\",\"gaitspeed: 0.8410879<br />steps: 4762.272<br />condition_type: Muscles\",\"gaitspeed: 0.8478280<br />steps: 4812.160<br />condition_type: Muscles\",\"gaitspeed: 0.8545680<br />steps: 4862.047<br />condition_type: Muscles\",\"gaitspeed: 0.8613081<br />steps: 4911.935<br />condition_type: Muscles\",\"gaitspeed: 0.8680481<br />steps: 4961.823<br />condition_type: Muscles\",\"gaitspeed: 0.8747882<br />steps: 5011.711<br />condition_type: Muscles\",\"gaitspeed: 0.8815283<br />steps: 5061.599<br />condition_type: Muscles\",\"gaitspeed: 0.8882683<br />steps: 5111.487<br />condition_type: Muscles\",\"gaitspeed: 0.8950084<br />steps: 5161.375<br />condition_type: Muscles\",\"gaitspeed: 0.9017485<br />steps: 5211.263<br />condition_type: Muscles\",\"gaitspeed: 0.9084885<br />steps: 5261.151<br />condition_type: Muscles\",\"gaitspeed: 0.9152286<br />steps: 5311.039<br />condition_type: Muscles\",\"gaitspeed: 0.9219686<br />steps: 5360.927<br />condition_type: Muscles\",\"gaitspeed: 0.9287087<br />steps: 5410.815<br />condition_type: Muscles\",\"gaitspeed: 0.9354488<br />steps: 5460.703<br />condition_type: Muscles\",\"gaitspeed: 0.9421888<br />steps: 5510.590<br />condition_type: Muscles\",\"gaitspeed: 0.9489289<br />steps: 5560.478<br />condition_type: Muscles\",\"gaitspeed: 0.9556690<br />steps: 5610.366<br />condition_type: Muscles\",\"gaitspeed: 0.9624090<br />steps: 5660.254<br />condition_type: Muscles\",\"gaitspeed: 0.9691491<br />steps: 5710.142<br />condition_type: Muscles\",\"gaitspeed: 0.9758892<br />steps: 5760.030<br />condition_type: Muscles\",\"gaitspeed: 0.9826292<br />steps: 5809.918<br />condition_type: Muscles\",\"gaitspeed: 0.9893693<br />steps: 5859.806<br />condition_type: Muscles\",\"gaitspeed: 0.9961093<br />steps: 5909.694<br />condition_type: Muscles\",\"gaitspeed: 1.0028494<br />steps: 5959.582<br />condition_type: Muscles\",\"gaitspeed: 1.0095895<br />steps: 6009.470<br />condition_type: Muscles\",\"gaitspeed: 1.0163295<br />steps: 6059.358<br />condition_type: Muscles\",\"gaitspeed: 1.0230696<br />steps: 6109.245<br />condition_type: Muscles\",\"gaitspeed: 1.0298097<br />steps: 6159.133<br />condition_type: Muscles\",\"gaitspeed: 1.0365497<br />steps: 6209.021<br />condition_type: Muscles\",\"gaitspeed: 1.0432898<br />steps: 6258.909<br />condition_type: Muscles\",\"gaitspeed: 1.0500298<br />steps: 6308.797<br />condition_type: Muscles\",\"gaitspeed: 1.0567699<br />steps: 6358.685<br />condition_type: Muscles\",\"gaitspeed: 1.0635100<br />steps: 6408.573<br />condition_type: Muscles\",\"gaitspeed: 1.0702500<br />steps: 6458.461<br />condition_type: Muscles\",\"gaitspeed: 1.0769901<br />steps: 6508.349<br />condition_type: Muscles\",\"gaitspeed: 1.0837302<br />steps: 6558.237<br />condition_type: Muscles\",\"gaitspeed: 1.0904702<br />steps: 6608.125<br />condition_type: Muscles\",\"gaitspeed: 1.0972103<br />steps: 6658.013<br />condition_type: Muscles\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"Muscles\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(0,191,196,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"Muscles\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.84450739600000002,0.85024096672151905,0.85597453744303797,0.86170810816455701,0.86744167888607593,0.87317524960759496,0.87890882032911399,0.88464239105063291,0.89037596177215195,0.89610953249367087,0.9018431032151899,0.90757667393670882,0.91331024465822785,0.91904381537974689,0.92477738610126581,0.93051095682278484,0.93624452754430376,0.94197809826582279,0.94771166898734172,0.95344523970886075,0.95917881043037978,0.9649123811518987,0.97064595187341773,0.97637952259493677,0.98211309331645569,0.98784666403797472,0.99358023475949364,0.99931380548101267,1.0050473762025316,1.0107809469240507,1.0165145176455697,1.0222480883670886,1.0279816590886075,1.0337152298101266,1.0394488005316456,1.0451823712531645,1.0509159419746834,1.0566495126962026,1.0623830834177215,1.0681166541392404,1.0738502248607595,1.0795837955822785,1.0853173663037974,1.0910509370253165,1.0967845077468354,1.1025180784683544,1.1082516491898735,1.1139852199113924,1.1197187906329114,1.1254523613544303,1.1311859320759494,1.1369195027974683,1.1426530735189873,1.1483866442405062,1.1541202149620253,1.1598537856835442,1.1655873564050632,1.1713209271265823,1.1770544978481012,1.1827880685696202,1.1885216392911393,1.1942552100126582,1.1999887807341771,1.2057223514556963,1.2114559221772152,1.2171894928987341,1.222923063620253,1.2286566343417722,1.2343902050632911,1.24012377578481,1.245857346506329,1.2515909172278481,1.257324487949367,1.2630580586708859,1.2687916293924051,1.274525200113924,1.2802587708354429,1.2859923415569621,1.291725912278481,1.2974594829999999],\"y\":[4234.6371325488744,4282.3740636304155,4330.1109947119548,4377.8479257934978,4425.5848568750371,4473.3217879565782,4521.0587190381193,4568.7956501196604,4616.5325812012015,4664.2695122827408,4712.0064433642819,4759.7433744458231,4807.4803055273642,4855.2172366089053,4902.9541676904446,4950.6910987719857,4998.4280298535268,5046.1649609350679,5093.9018920166072,5141.6388230981502,5189.3757541796913,5237.1126852612306,5284.8496163427717,5332.5865474243128,5380.3234785058539,5428.060409587395,5475.7973406689362,5523.5342717504773,5571.2712028320166,5619.0081339135595,5666.7450649950988,5714.4819960766399,5762.2189271581792,5809.9558582397221,5857.6927893212614,5905.4297204028026,5953.1666514843419,6000.9035825658848,6048.6405136474241,6096.3774447289652,6144.1143758105063,6191.8513068920474,6239.5882379735885,6287.3251690551297,6335.0621001366708,6382.7990312182101,6430.535962299753,6478.2728933812923,6526.0098244628334,6573.7467555443727,6621.4836866259157,6669.2206177074549,6716.9575487889961,6764.6944798705354,6812.4314109520783,6860.1683420336176,6907.9052731151587,6955.6422041967016,7003.3791352782409,7051.1160663597821,7098.8529974413232,7146.5899285228643,7194.3268596044036,7242.0637906859465,7289.8007217674858,7337.5376528490269,7385.2745839305662,7433.0115150121092,7480.7484460936485,7528.4853771751896,7576.2223082567289,7623.9592393382718,7671.6961704198129,7719.4331015013522,7767.1700325828951,7814.9069636644344,7862.6438947459756,7910.3808258275167,7958.1177569090578,8005.8546879905971],\"text\":[\"gaitspeed: 0.8445074<br />steps: 4234.637<br />condition_type: None\",\"gaitspeed: 0.8502410<br />steps: 4282.374<br />condition_type: None\",\"gaitspeed: 0.8559745<br />steps: 4330.111<br />condition_type: None\",\"gaitspeed: 0.8617081<br />steps: 4377.848<br />condition_type: None\",\"gaitspeed: 0.8674417<br />steps: 4425.585<br />condition_type: None\",\"gaitspeed: 0.8731752<br />steps: 4473.322<br />condition_type: None\",\"gaitspeed: 0.8789088<br />steps: 4521.059<br />condition_type: None\",\"gaitspeed: 0.8846424<br />steps: 4568.796<br />condition_type: None\",\"gaitspeed: 0.8903760<br />steps: 4616.533<br />condition_type: None\",\"gaitspeed: 0.8961095<br />steps: 4664.270<br />condition_type: None\",\"gaitspeed: 0.9018431<br />steps: 4712.006<br />condition_type: None\",\"gaitspeed: 0.9075767<br />steps: 4759.743<br />condition_type: None\",\"gaitspeed: 0.9133102<br />steps: 4807.480<br />condition_type: None\",\"gaitspeed: 0.9190438<br />steps: 4855.217<br />condition_type: None\",\"gaitspeed: 0.9247774<br />steps: 4902.954<br />condition_type: None\",\"gaitspeed: 0.9305110<br />steps: 4950.691<br />condition_type: None\",\"gaitspeed: 0.9362445<br />steps: 4998.428<br />condition_type: None\",\"gaitspeed: 0.9419781<br />steps: 5046.165<br />condition_type: None\",\"gaitspeed: 0.9477117<br />steps: 5093.902<br />condition_type: None\",\"gaitspeed: 0.9534452<br />steps: 5141.639<br />condition_type: None\",\"gaitspeed: 0.9591788<br />steps: 5189.376<br />condition_type: None\",\"gaitspeed: 0.9649124<br />steps: 5237.113<br />condition_type: None\",\"gaitspeed: 0.9706460<br />steps: 5284.850<br />condition_type: None\",\"gaitspeed: 0.9763795<br />steps: 5332.587<br />condition_type: None\",\"gaitspeed: 0.9821131<br />steps: 5380.323<br />condition_type: None\",\"gaitspeed: 0.9878467<br />steps: 5428.060<br />condition_type: None\",\"gaitspeed: 0.9935802<br />steps: 5475.797<br />condition_type: None\",\"gaitspeed: 0.9993138<br />steps: 5523.534<br />condition_type: None\",\"gaitspeed: 1.0050474<br />steps: 5571.271<br />condition_type: None\",\"gaitspeed: 1.0107809<br />steps: 5619.008<br />condition_type: None\",\"gaitspeed: 1.0165145<br />steps: 5666.745<br />condition_type: None\",\"gaitspeed: 1.0222481<br />steps: 5714.482<br />condition_type: None\",\"gaitspeed: 1.0279817<br />steps: 5762.219<br />condition_type: None\",\"gaitspeed: 1.0337152<br />steps: 5809.956<br />condition_type: None\",\"gaitspeed: 1.0394488<br />steps: 5857.693<br />condition_type: None\",\"gaitspeed: 1.0451824<br />steps: 5905.430<br />condition_type: None\",\"gaitspeed: 1.0509159<br />steps: 5953.167<br />condition_type: None\",\"gaitspeed: 1.0566495<br />steps: 6000.904<br />condition_type: None\",\"gaitspeed: 1.0623831<br />steps: 6048.641<br />condition_type: None\",\"gaitspeed: 1.0681167<br />steps: 6096.377<br />condition_type: None\",\"gaitspeed: 1.0738502<br />steps: 6144.114<br />condition_type: None\",\"gaitspeed: 1.0795838<br />steps: 6191.851<br />condition_type: None\",\"gaitspeed: 1.0853174<br />steps: 6239.588<br />condition_type: None\",\"gaitspeed: 1.0910509<br />steps: 6287.325<br />condition_type: None\",\"gaitspeed: 1.0967845<br />steps: 6335.062<br />condition_type: None\",\"gaitspeed: 1.1025181<br />steps: 6382.799<br />condition_type: None\",\"gaitspeed: 1.1082516<br />steps: 6430.536<br />condition_type: None\",\"gaitspeed: 1.1139852<br />steps: 6478.273<br />condition_type: None\",\"gaitspeed: 1.1197188<br />steps: 6526.010<br />condition_type: None\",\"gaitspeed: 1.1254524<br />steps: 6573.747<br />condition_type: None\",\"gaitspeed: 1.1311859<br />steps: 6621.484<br />condition_type: None\",\"gaitspeed: 1.1369195<br />steps: 6669.221<br />condition_type: None\",\"gaitspeed: 1.1426531<br />steps: 6716.958<br />condition_type: None\",\"gaitspeed: 1.1483866<br />steps: 6764.694<br />condition_type: None\",\"gaitspeed: 1.1541202<br />steps: 6812.431<br />condition_type: None\",\"gaitspeed: 1.1598538<br />steps: 6860.168<br />condition_type: None\",\"gaitspeed: 1.1655874<br />steps: 6907.905<br />condition_type: None\",\"gaitspeed: 1.1713209<br />steps: 6955.642<br />condition_type: None\",\"gaitspeed: 1.1770545<br />steps: 7003.379<br />condition_type: None\",\"gaitspeed: 1.1827881<br />steps: 7051.116<br />condition_type: None\",\"gaitspeed: 1.1885216<br />steps: 7098.853<br />condition_type: None\",\"gaitspeed: 1.1942552<br />steps: 7146.590<br />condition_type: None\",\"gaitspeed: 1.1999888<br />steps: 7194.327<br />condition_type: None\",\"gaitspeed: 1.2057224<br />steps: 7242.064<br />condition_type: None\",\"gaitspeed: 1.2114559<br />steps: 7289.801<br />condition_type: None\",\"gaitspeed: 1.2171895<br />steps: 7337.538<br />condition_type: None\",\"gaitspeed: 1.2229231<br />steps: 7385.275<br />condition_type: None\",\"gaitspeed: 1.2286566<br />steps: 7433.012<br />condition_type: None\",\"gaitspeed: 1.2343902<br />steps: 7480.748<br />condition_type: None\",\"gaitspeed: 1.2401238<br />steps: 7528.485<br />condition_type: None\",\"gaitspeed: 1.2458573<br />steps: 7576.222<br />condition_type: None\",\"gaitspeed: 1.2515909<br />steps: 7623.959<br />condition_type: None\",\"gaitspeed: 1.2573245<br />steps: 7671.696<br />condition_type: None\",\"gaitspeed: 1.2630581<br />steps: 7719.433<br />condition_type: None\",\"gaitspeed: 1.2687916<br />steps: 7767.170<br />condition_type: None\",\"gaitspeed: 1.2745252<br />steps: 7814.907<br />condition_type: None\",\"gaitspeed: 1.2802588<br />steps: 7862.644<br />condition_type: None\",\"gaitspeed: 1.2859923<br />steps: 7910.381<br />condition_type: None\",\"gaitspeed: 1.2917259<br />steps: 7958.118<br />condition_type: None\",\"gaitspeed: 1.2974595<br />steps: 8005.855<br />condition_type: None\"],\"type\":\"scatter\",\"mode\":\"lines\",\"name\":\"None\",\"line\":{\"width\":3.7795275590551185,\"color\":\"rgba(199,124,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"legendgroup\":\"None\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0.532339275,0.5410569152911392,0.5497745555822785,0.5584921958734177,0.567209836164557,0.5759274764556962,0.58464511674683539,0.5933627570379747,0.60208039732911389,0.6107980376202532,0.61951567791139239,0.6282333182025317,0.63695095849367089,0.64566859878481009,0.65438623907594939,0.66310387936708859,0.67182151965822789,0.68053915994936709,0.6892568002405064,0.69797444053164559,0.70669208082278478,0.71540972111392409,0.72412736140506329,0.73284500169620259,0.74156264198734179,0.75028028227848109,0.75899792256962029,0.76771556286075948,0.77643320315189879,0.78515084344303798,0.79386848373417718,0.80258612402531648,0.81130376431645579,0.82002140460759498,0.82873904489873418,0.83745668518987348,0.84617432548101268,0.85489196577215187,0.86360960606329118,0.87232724635443049,0.88104488664556968,0.88976252693670888,0.89848016722784818,0.90719780751898738,0.91591544781012657,0.92463308810126588,0.93335072839240518,0.94206836868354438,0.95078600897468357,0.95950364926582288,0.96822128955696207,0.97693892984810127,0.98565657013924057,0.99437421043037988,1.003091850721519,1.0118094910126583,1.0205271313037976,1.0292447715949367,1.037962411886076,1.0466800521772153,1.0553976924683544,1.0641153327594939,1.072832973050633,1.0815506133417723,1.0902682536329116,1.0989858939240507,1.10770353421519,1.1164211745063293,1.1251388147974684,1.1338564550886077,1.142574095379747,1.1512917356708861,1.1600093759620254,1.1687270162531647,1.1774446565443037,1.1861622968354433,1.1948799371265824,1.2035975774177214,1.212315217708861,1.2210328580000001,1.2210328580000001,1.212315217708861,1.2035975774177214,1.1948799371265824,1.1861622968354433,1.1774446565443037,1.1687270162531647,1.1600093759620254,1.1512917356708861,1.142574095379747,1.1338564550886077,1.1251388147974684,1.1164211745063293,1.10770353421519,1.0989858939240507,1.0902682536329116,1.0815506133417723,1.072832973050633,1.0641153327594939,1.0553976924683544,1.0466800521772153,1.037962411886076,1.0292447715949367,1.0205271313037976,1.0118094910126583,1.003091850721519,0.99437421043037988,0.98565657013924057,0.97693892984810127,0.96822128955696207,0.95950364926582288,0.95078600897468357,0.94206836868354438,0.93335072839240518,0.92463308810126588,0.91591544781012657,0.90719780751898738,0.89848016722784818,0.88976252693670888,0.88104488664556968,0.87232724635443049,0.86360960606329118,0.85489196577215187,0.84617432548101268,0.83745668518987348,0.82873904489873418,0.82002140460759498,0.81130376431645579,0.80258612402531648,0.79386848373417718,0.78515084344303798,0.77643320315189879,0.76771556286075948,0.75899792256962029,0.75028028227848109,0.74156264198734179,0.73284500169620259,0.72412736140506329,0.71540972111392409,0.70669208082278478,0.69797444053164559,0.6892568002405064,0.68053915994936709,0.67182151965822789,0.66310387936708859,0.65438623907594939,0.64566859878481009,0.63695095849367089,0.6282333182025317,0.61951567791139239,0.6107980376202532,0.60208039732911389,0.5933627570379747,0.58464511674683539,0.5759274764556962,0.567209836164557,0.5584921958734177,0.5497745555822785,0.5410569152911392,0.532339275,0.532339275],\"y\":[982.96724792001851,1073.4155905978173,1163.6790905779098,1253.7439354232281,1343.5951238932532,1433.2163693380544,1522.5900002415917,1611.696859744301,1700.5162067048389,1789.025621762077,1877.2009229452192,1965.0160966546682,2052.4432512803542,2139.452602287749,2226.012499188902,2312.0895062706604,2397.6485500449699,2482.6531468058502,2567.0657230389229,2650.8480393001896,2733.9617241440828,2816.3689184308241,2898.033021818218,2978.9195227700152,3058.9968818276188,3138.2374265765716,3216.6182075175216,3294.1217589084476,3370.7367092890618,3446.4581937644894,3521.2880339739631,3595.2346704498145,3668.3128531448974,3740.5431161074353,3811.9510786480578,3882.566625777099,3952.4230243490861,4021.5560286721766,4090.003021738456,4157.8022276264164,4224.9920189623426,4291.6103322097306,4357.6941940731303,4423.2793550023853,4488.4000207633871,4553.0886700896253,4617.3759451646465,4681.2906016738616,4744.8595059932568,4808.1076684054469,4871.0583027838748,4933.7329047753137,4996.1513420180736,5058.3319512891976,5120.2916386472316,5182.0459796218347,5243.6093173072095,5304.9948568613709,5366.2147554191079,5427.2802068157944,5488.2015208127123,5548.9881967310357,5609.6489915573511,5670.1919826918975,5730.624625582549,5790.9538065323304,5851.1858909921939,5911.3267676602154,5971.3818887070702,6031.3563064389537,6091.2547066957213,6151.0814392654138,6210.8405455782295,6270.5357839240096,6330.1706524184656,6389.748409924935,6449.2720951207093,6508.7445438804425,6568.1684051334096,6627.5461553369887,8574.6832920210654,8482.1320566659451,8389.6269323601991,8297.170395561232,8204.7650951983014,8112.4138671460578,8020.1197500818125,7927.8860028688841,7835.7161236229949,7743.6138706339825,7651.5832853320417,7559.6287175052203,7467.7548529933702,7375.9667441026868,7284.2698430038417,7192.6700383949183,7101.1736957268649,7009.7877013027028,6918.5195105703169,6827.3772009299282,6736.3695293681412,6645.5059952061229,6554.7969082051513,6464.2534622006078,6373.8878143272777,6283.7131697431723,6193.7438715425051,6103.9954952549206,6014.4849469389719,5925.230563371706,5836.252212191429,5747.5713890449142,5659.2113078056045,5571.1969787561147,5483.5552682724274,5396.3149320399571,5309.5066122422541,5223.1627876128041,5137.317663917499,5052.0069916061821,4967.2677973833997,4883.1380177126557,4799.6560252202262,4716.8600439846123,4634.787456997894,4553.4740185682267,4472.9529955501448,4393.2542729539782,4314.4034700903549,4236.4211210074973,4159.3219756582666,4083.1144745749889,4007.8004393968963,3933.3750052291175,3859.8268006113608,3787.1383598016068,3715.2867333005056,3644.2442486935961,3573.9793665222851,3504.4575752503179,3435.6422745355062,3367.495605238068,3299.9791959124341,3233.0548071146095,3166.6848653302104,3100.832886853264,3035.4637981957103,2970.5441636444002,2906.0423327113795,2841.9285208621218,2778.1748364865589,2714.7552659850908,2651.6456273869235,2588.823501330924,2526.2681466757567,2463.9604065618532,2401.8826094731712,2340.0184687597848,2278.3529831811688,2216.8723403002627,982.96724792001851],\"text\":[\"gaitspeed: 0.5323393<br />steps: 1599.920<br />condition_type: Joints\",\"gaitspeed: 0.5410569<br />steps: 1675.884<br />condition_type: Joints\",\"gaitspeed: 0.5497746<br />steps: 1751.849<br />condition_type: Joints\",\"gaitspeed: 0.5584922<br />steps: 1827.813<br />condition_type: Joints\",\"gaitspeed: 0.5672098<br />steps: 1903.778<br />condition_type: Joints\",\"gaitspeed: 0.5759275<br />steps: 1979.742<br />condition_type: Joints\",\"gaitspeed: 0.5846451<br />steps: 2055.707<br />condition_type: Joints\",\"gaitspeed: 0.5933628<br />steps: 2131.671<br />condition_type: Joints\",\"gaitspeed: 0.6020804<br />steps: 2207.636<br />condition_type: Joints\",\"gaitspeed: 0.6107980<br />steps: 2283.600<br />condition_type: Joints\",\"gaitspeed: 0.6195157<br />steps: 2359.565<br />condition_type: Joints\",\"gaitspeed: 0.6282333<br />steps: 2435.529<br />condition_type: Joints\",\"gaitspeed: 0.6369510<br />steps: 2511.494<br />condition_type: Joints\",\"gaitspeed: 0.6456686<br />steps: 2587.458<br />condition_type: Joints\",\"gaitspeed: 0.6543862<br />steps: 2663.423<br />condition_type: Joints\",\"gaitspeed: 0.6631039<br />steps: 2739.387<br />condition_type: Joints\",\"gaitspeed: 0.6718215<br />steps: 2815.352<br />condition_type: Joints\",\"gaitspeed: 0.6805392<br />steps: 2891.316<br />condition_type: Joints\",\"gaitspeed: 0.6892568<br />steps: 2967.281<br />condition_type: Joints\",\"gaitspeed: 0.6979744<br />steps: 3043.245<br />condition_type: Joints\",\"gaitspeed: 0.7066921<br />steps: 3119.210<br />condition_type: Joints\",\"gaitspeed: 0.7154097<br />steps: 3195.174<br />condition_type: Joints\",\"gaitspeed: 0.7241274<br />steps: 3271.139<br />condition_type: Joints\",\"gaitspeed: 0.7328450<br />steps: 3347.103<br />condition_type: Joints\",\"gaitspeed: 0.7415626<br />steps: 3423.068<br />condition_type: Joints\",\"gaitspeed: 0.7502803<br />steps: 3499.032<br />condition_type: Joints\",\"gaitspeed: 0.7589979<br />steps: 3574.997<br />condition_type: Joints\",\"gaitspeed: 0.7677156<br />steps: 3650.961<br />condition_type: Joints\",\"gaitspeed: 0.7764332<br />steps: 3726.926<br />condition_type: Joints\",\"gaitspeed: 0.7851508<br />steps: 3802.890<br />condition_type: Joints\",\"gaitspeed: 0.7938685<br />steps: 3878.855<br />condition_type: Joints\",\"gaitspeed: 0.8025861<br />steps: 3954.819<br />condition_type: Joints\",\"gaitspeed: 0.8113038<br />steps: 4030.784<br />condition_type: Joints\",\"gaitspeed: 0.8200214<br />steps: 4106.748<br />condition_type: Joints\",\"gaitspeed: 0.8287390<br />steps: 4182.713<br />condition_type: Joints\",\"gaitspeed: 0.8374567<br />steps: 4258.677<br />condition_type: Joints\",\"gaitspeed: 0.8461743<br />steps: 4334.642<br />condition_type: Joints\",\"gaitspeed: 0.8548920<br />steps: 4410.606<br />condition_type: Joints\",\"gaitspeed: 0.8636096<br />steps: 4486.571<br />condition_type: Joints\",\"gaitspeed: 0.8723272<br />steps: 4562.535<br />condition_type: Joints\",\"gaitspeed: 0.8810449<br />steps: 4638.500<br />condition_type: Joints\",\"gaitspeed: 0.8897625<br />steps: 4714.464<br />condition_type: Joints\",\"gaitspeed: 0.8984802<br />steps: 4790.428<br />condition_type: Joints\",\"gaitspeed: 0.9071978<br />steps: 4866.393<br />condition_type: Joints\",\"gaitspeed: 0.9159154<br />steps: 4942.357<br />condition_type: Joints\",\"gaitspeed: 0.9246331<br />steps: 5018.322<br />condition_type: Joints\",\"gaitspeed: 0.9333507<br />steps: 5094.286<br />condition_type: Joints\",\"gaitspeed: 0.9420684<br />steps: 5170.251<br />condition_type: Joints\",\"gaitspeed: 0.9507860<br />steps: 5246.215<br />condition_type: Joints\",\"gaitspeed: 0.9595036<br />steps: 5322.180<br />condition_type: Joints\",\"gaitspeed: 0.9682213<br />steps: 5398.144<br />condition_type: Joints\",\"gaitspeed: 0.9769389<br />steps: 5474.109<br />condition_type: Joints\",\"gaitspeed: 0.9856566<br />steps: 5550.073<br />condition_type: Joints\",\"gaitspeed: 0.9943742<br />steps: 5626.038<br />condition_type: Joints\",\"gaitspeed: 1.0030919<br />steps: 5702.002<br />condition_type: Joints\",\"gaitspeed: 1.0118095<br />steps: 5777.967<br />condition_type: Joints\",\"gaitspeed: 1.0205271<br />steps: 5853.931<br />condition_type: Joints\",\"gaitspeed: 1.0292448<br />steps: 5929.896<br />condition_type: Joints\",\"gaitspeed: 1.0379624<br />steps: 6005.860<br />condition_type: Joints\",\"gaitspeed: 1.0466801<br />steps: 6081.825<br />condition_type: Joints\",\"gaitspeed: 1.0553977<br />steps: 6157.789<br />condition_type: Joints\",\"gaitspeed: 1.0641153<br />steps: 6233.754<br />condition_type: Joints\",\"gaitspeed: 1.0728330<br />steps: 6309.718<br />condition_type: Joints\",\"gaitspeed: 1.0815506<br />steps: 6385.683<br />condition_type: Joints\",\"gaitspeed: 1.0902683<br />steps: 6461.647<br />condition_type: Joints\",\"gaitspeed: 1.0989859<br />steps: 6537.612<br />condition_type: Joints\",\"gaitspeed: 1.1077035<br />steps: 6613.576<br />condition_type: Joints\",\"gaitspeed: 1.1164212<br />steps: 6689.541<br />condition_type: Joints\",\"gaitspeed: 1.1251388<br />steps: 6765.505<br />condition_type: Joints\",\"gaitspeed: 1.1338565<br />steps: 6841.470<br />condition_type: Joints\",\"gaitspeed: 1.1425741<br />steps: 6917.434<br />condition_type: Joints\",\"gaitspeed: 1.1512917<br />steps: 6993.399<br />condition_type: Joints\",\"gaitspeed: 1.1600094<br />steps: 7069.363<br />condition_type: Joints\",\"gaitspeed: 1.1687270<br />steps: 7145.328<br />condition_type: Joints\",\"gaitspeed: 1.1774447<br />steps: 7221.292<br />condition_type: Joints\",\"gaitspeed: 1.1861623<br />steps: 7297.257<br />condition_type: Joints\",\"gaitspeed: 1.1948799<br />steps: 7373.221<br />condition_type: Joints\",\"gaitspeed: 1.2035976<br />steps: 7449.186<br />condition_type: Joints\",\"gaitspeed: 1.2123152<br />steps: 7525.150<br />condition_type: Joints\",\"gaitspeed: 1.2210329<br />steps: 7601.115<br />condition_type: Joints\",\"gaitspeed: 1.2210329<br />steps: 7601.115<br />condition_type: Joints\",\"gaitspeed: 1.2123152<br />steps: 7525.150<br />condition_type: Joints\",\"gaitspeed: 1.2035976<br />steps: 7449.186<br />condition_type: Joints\",\"gaitspeed: 1.1948799<br />steps: 7373.221<br />condition_type: Joints\",\"gaitspeed: 1.1861623<br />steps: 7297.257<br />condition_type: Joints\",\"gaitspeed: 1.1774447<br />steps: 7221.292<br />condition_type: Joints\",\"gaitspeed: 1.1687270<br />steps: 7145.328<br />condition_type: Joints\",\"gaitspeed: 1.1600094<br />steps: 7069.363<br />condition_type: Joints\",\"gaitspeed: 1.1512917<br />steps: 6993.399<br />condition_type: Joints\",\"gaitspeed: 1.1425741<br />steps: 6917.434<br />condition_type: Joints\",\"gaitspeed: 1.1338565<br />steps: 6841.470<br />condition_type: Joints\",\"gaitspeed: 1.1251388<br />steps: 6765.505<br />condition_type: Joints\",\"gaitspeed: 1.1164212<br />steps: 6689.541<br />condition_type: Joints\",\"gaitspeed: 1.1077035<br />steps: 6613.576<br />condition_type: Joints\",\"gaitspeed: 1.0989859<br />steps: 6537.612<br />condition_type: Joints\",\"gaitspeed: 1.0902683<br />steps: 6461.647<br />condition_type: Joints\",\"gaitspeed: 1.0815506<br />steps: 6385.683<br />condition_type: Joints\",\"gaitspeed: 1.0728330<br />steps: 6309.718<br />condition_type: Joints\",\"gaitspeed: 1.0641153<br />steps: 6233.754<br />condition_type: Joints\",\"gaitspeed: 1.0553977<br />steps: 6157.789<br />condition_type: Joints\",\"gaitspeed: 1.0466801<br />steps: 6081.825<br />condition_type: Joints\",\"gaitspeed: 1.0379624<br />steps: 6005.860<br />condition_type: Joints\",\"gaitspeed: 1.0292448<br />steps: 5929.896<br />condition_type: Joints\",\"gaitspeed: 1.0205271<br />steps: 5853.931<br />condition_type: Joints\",\"gaitspeed: 1.0118095<br />steps: 5777.967<br />condition_type: Joints\",\"gaitspeed: 1.0030919<br />steps: 5702.002<br />condition_type: Joints\",\"gaitspeed: 0.9943742<br />steps: 5626.038<br />condition_type: Joints\",\"gaitspeed: 0.9856566<br />steps: 5550.073<br />condition_type: Joints\",\"gaitspeed: 0.9769389<br />steps: 5474.109<br />condition_type: Joints\",\"gaitspeed: 0.9682213<br />steps: 5398.144<br />condition_type: Joints\",\"gaitspeed: 0.9595036<br />steps: 5322.180<br />condition_type: Joints\",\"gaitspeed: 0.9507860<br />steps: 5246.215<br />condition_type: Joints\",\"gaitspeed: 0.9420684<br />steps: 5170.251<br />condition_type: Joints\",\"gaitspeed: 0.9333507<br />steps: 5094.286<br />condition_type: Joints\",\"gaitspeed: 0.9246331<br />steps: 5018.322<br />condition_type: Joints\",\"gaitspeed: 0.9159154<br />steps: 4942.357<br />condition_type: Joints\",\"gaitspeed: 0.9071978<br />steps: 4866.393<br />condition_type: Joints\",\"gaitspeed: 0.8984802<br />steps: 4790.428<br />condition_type: Joints\",\"gaitspeed: 0.8897625<br />steps: 4714.464<br />condition_type: Joints\",\"gaitspeed: 0.8810449<br />steps: 4638.500<br />condition_type: Joints\",\"gaitspeed: 0.8723272<br />steps: 4562.535<br />condition_type: Joints\",\"gaitspeed: 0.8636096<br />steps: 4486.571<br />condition_type: Joints\",\"gaitspeed: 0.8548920<br />steps: 4410.606<br />condition_type: Joints\",\"gaitspeed: 0.8461743<br />steps: 4334.642<br />condition_type: Joints\",\"gaitspeed: 0.8374567<br />steps: 4258.677<br />condition_type: Joints\",\"gaitspeed: 0.8287390<br />steps: 4182.713<br />condition_type: Joints\",\"gaitspeed: 0.8200214<br />steps: 4106.748<br />condition_type: Joints\",\"gaitspeed: 0.8113038<br />steps: 4030.784<br />condition_type: Joints\",\"gaitspeed: 0.8025861<br />steps: 3954.819<br />condition_type: Joints\",\"gaitspeed: 0.7938685<br />steps: 3878.855<br />condition_type: Joints\",\"gaitspeed: 0.7851508<br />steps: 3802.890<br />condition_type: Joints\",\"gaitspeed: 0.7764332<br />steps: 3726.926<br />condition_type: Joints\",\"gaitspeed: 0.7677156<br />steps: 3650.961<br />condition_type: Joints\",\"gaitspeed: 0.7589979<br />steps: 3574.997<br />condition_type: Joints\",\"gaitspeed: 0.7502803<br />steps: 3499.032<br />condition_type: Joints\",\"gaitspeed: 0.7415626<br />steps: 3423.068<br />condition_type: Joints\",\"gaitspeed: 0.7328450<br />steps: 3347.103<br />condition_type: Joints\",\"gaitspeed: 0.7241274<br />steps: 3271.139<br />condition_type: Joints\",\"gaitspeed: 0.7154097<br />steps: 3195.174<br />condition_type: Joints\",\"gaitspeed: 0.7066921<br />steps: 3119.210<br />condition_type: Joints\",\"gaitspeed: 0.6979744<br />steps: 3043.245<br />condition_type: Joints\",\"gaitspeed: 0.6892568<br />steps: 2967.281<br />condition_type: Joints\",\"gaitspeed: 0.6805392<br />steps: 2891.316<br />condition_type: Joints\",\"gaitspeed: 0.6718215<br />steps: 2815.352<br />condition_type: Joints\",\"gaitspeed: 0.6631039<br />steps: 2739.387<br />condition_type: Joints\",\"gaitspeed: 0.6543862<br />steps: 2663.423<br />condition_type: Joints\",\"gaitspeed: 0.6456686<br />steps: 2587.458<br />condition_type: Joints\",\"gaitspeed: 0.6369510<br />steps: 2511.494<br />condition_type: Joints\",\"gaitspeed: 0.6282333<br />steps: 2435.529<br />condition_type: Joints\",\"gaitspeed: 0.6195157<br />steps: 2359.565<br />condition_type: Joints\",\"gaitspeed: 0.6107980<br />steps: 2283.600<br />condition_type: Joints\",\"gaitspeed: 0.6020804<br />steps: 2207.636<br />condition_type: Joints\",\"gaitspeed: 0.5933628<br />steps: 2131.671<br />condition_type: Joints\",\"gaitspeed: 0.5846451<br />steps: 2055.707<br />condition_type: Joints\",\"gaitspeed: 0.5759275<br />steps: 1979.742<br />condition_type: Joints\",\"gaitspeed: 0.5672098<br />steps: 1903.778<br />condition_type: Joints\",\"gaitspeed: 0.5584922<br />steps: 1827.813<br />condition_type: Joints\",\"gaitspeed: 0.5497746<br />steps: 1751.849<br />condition_type: Joints\",\"gaitspeed: 0.5410569<br />steps: 1675.884<br />condition_type: Joints\",\"gaitspeed: 0.5323393<br />steps: 1599.920<br />condition_type: Joints\",\"gaitspeed: 0.5323393<br />steps: 1599.920<br />condition_type: Joints\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.7795275590551185,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(153,153,153,0.4)\",\"hoveron\":\"points\",\"hoverinfo\":\"x+y\",\"name\":\"Joints\",\"legendgroup\":\"Joints\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.60409349199999995,0.60932991169620243,0.61456633139240502,0.6198027510886075,0.62503917078481008,0.63027559048101256,0.63551201017721515,0.64074842987341762,0.64598484956962021,0.65122126926582269,0.65645768896202528,0.66169410865822775,0.66693052835443034,0.67216694805063282,0.67740336774683541,0.68263978744303788,0.68787620713924047,0.69311262683544295,0.69834904653164553,0.70358546622784801,0.7088218859240506,0.71405830562025308,0.71929472531645566,0.72453114501265814,0.72976756470886073,0.7350039844050632,0.74024040410126579,0.74547682379746827,0.75071324349367086,0.75594966318987333,0.76118608288607592,0.7664225025822784,0.77165892227848099,0.77689534197468346,0.78213176167088605,0.78736818136708853,0.79260460106329111,0.79784102075949359,0.80307744045569618,0.80831386015189866,0.81355027984810124,0.81878669954430372,0.82402311924050631,0.82925953893670878,0.83449595863291137,0.83973237832911385,0.84496879802531644,0.85020521772151891,0.85544163741772139,0.86067805711392398,0.86591447681012657,0.87115089650632904,0.87638731620253152,0.88162373589873411,0.88686015559493669,0.89209657529113917,0.89733299498734165,0.90256941468354424,0.90780583437974682,0.9130422540759493,0.91827867377215178,0.92351509346835436,0.92875151316455695,0.93398793286075943,0.93922435255696191,0.94446077225316449,0.94969719194936708,0.95493361164556956,0.96017003134177203,0.96540645103797462,0.97064287073417721,0.97587929043037969,0.98111571012658216,0.98635212982278475,0.99158854951898734,0.99682496921518982,1.0020613889113923,1.007297808607595,1.0125342283037975,1.0177706479999999,1.0177706479999999,1.0125342283037975,1.007297808607595,1.0020613889113923,0.99682496921518982,0.99158854951898734,0.98635212982278475,0.98111571012658216,0.97587929043037969,0.97064287073417721,0.96540645103797462,0.96017003134177203,0.95493361164556956,0.94969719194936708,0.94446077225316449,0.93922435255696191,0.93398793286075943,0.92875151316455695,0.92351509346835436,0.91827867377215178,0.9130422540759493,0.90780583437974682,0.90256941468354424,0.89733299498734165,0.89209657529113917,0.88686015559493669,0.88162373589873411,0.87638731620253152,0.87115089650632904,0.86591447681012657,0.86067805711392398,0.85544163741772139,0.85020521772151891,0.84496879802531644,0.83973237832911385,0.83449595863291137,0.82925953893670878,0.82402311924050631,0.81878669954430372,0.81355027984810124,0.80831386015189866,0.80307744045569618,0.79784102075949359,0.79260460106329111,0.78736818136708853,0.78213176167088605,0.77689534197468346,0.77165892227848099,0.7664225025822784,0.76118608288607592,0.75594966318987333,0.75071324349367086,0.74547682379746827,0.74024040410126579,0.7350039844050632,0.72976756470886073,0.72453114501265814,0.71929472531645566,0.71405830562025308,0.7088218859240506,0.70358546622784801,0.69834904653164553,0.69311262683544295,0.68787620713924047,0.68263978744303788,0.67740336774683541,0.67216694805063282,0.66693052835443034,0.66169410865822775,0.65645768896202528,0.65122126926582269,0.64598484956962021,0.64074842987341762,0.63551201017721515,0.63027559048101256,0.62503917078481008,0.6198027510886075,0.61456633139240502,0.60932991169620243,0.60409349199999995,0.60409349199999995],\"y\":[1693.0389872682463,1744.1951662919639,1794.8858605891978,1845.0826000062248,1894.7554718830938,1943.8731614627523,1992.4030230366882,2040.3111871432782,2087.5627091461429,2134.1217642226866,2179.9518930965701,2225.01630166419,2269.2782159234621,2312.701291276057,2355.2500723585381,2396.8904961532817,2437.5904274152813,2477.3202116976136,2516.0532278226005,2553.76641893748,2590.4407797282879,2626.0617772999594,2660.6196848923319,2694.1098110303469,2726.5326117195427,2757.8936794929787,2788.2036099179595,2817.4777529129747,2845.735862249338,2873.0016613682137,2899.3023467670728,2924.6680515571925,2949.131291442216,2972.7264135722135,2995.4890658601389,3017.4557008268885,3038.6631242709723,3059.1480953816008,3078.9469815855509,3098.0954686003915,3116.6283239353097,3134.5792104414495,3151.9805454219786,3168.8634001927485,3185.2574347484106,3201.190862245111,3216.6904382756265,3231.78147031351,3246.4878431806183,3260.8320569019152,3274.8352738196995,3288.5173723236544,3301.8970049993959,3314.9916593986732,3327.8177199862025,3340.3905301217646,3352.7244531939946,3364.8329322382651,3376.7285475496224,3388.4230719474072,3399.9275234656716,3411.2522153370046,3422.4068032106793,3433.4003296027099,3444.2412656182619,3454.9375500186452,3465.4966257278356,3475.9254738890518,3486.2306455917942,3496.41829139526,3506.494188776086,3516.4637676278653,3526.3321339374634,3536.1040917592982,3545.7841636039775,3555.3766093522245,3564.8854437991959,3574.3144529283009,3583.6672090075031,3592.9470845951992,6880.1995190464249,6822.3104125436457,6764.4941865323717,6706.7542135709973,6649.0940659274947,6591.5175295852659,6534.0286193394677,6476.6315950708267,6419.330979289949,6362.1315760512525,6305.038491341601,6248.057155054591,6191.1933446668572,6134.4532107375981,6077.8433043563127,6021.370606666218,5965.0425605912951,5908.86710489285,5852.8527106760484,5797.0084204569039,5741.3438898846925,5685.8694321920011,5630.596065412883,5575.5355623666765,5520.7005033484302,5466.1043313935188,5411.7614098905706,5357.6870821993698,5303.8977327846369,5250.410849198116,5197.2450840254232,5144.4203156562444,5091.9577064328769,5039.8797563802846,4988.2103503203225,4936.9747957265472,4886.1998481917335,4835.9137208720276,4786.1460737620791,4736.927978177745,4688.2918514221856,4640.2713563465504,4592.9012604600248,4546.217249480178,4500.2556908337838,4455.0533437100576,4410.6470139075072,4367.0731539470289,4324.3674117415749,4282.5641344412188,4241.6958377496021,4201.7926547780025,4162.8817820238883,4124.986942928429,4088.1278912629323,4052.3199769458924,4017.5737955446125,3983.8949395921518,3951.2838650940466,3919.7358805752424,3889.2412592755745,3859.7854682999782,3831.3495023344876,3803.9103045263441,3777.441253697868,3751.9126954021358,3727.2924943941393,3703.5465876562603,3680.6395198250548,3658.5349463021989,3637.1960930856067,3616.5861660716746,3596.6687059840615,3577.4078880001762,3558.7687674836361,3540.7174749728188,3523.2213647592102,3506.2491220857614,3489.7708342925198,3473.7580312257614,1693.0389872682463],\"text\":[\"gaitspeed: 0.6040935<br />steps: 2583.399<br />condition_type: Bones\",\"gaitspeed: 0.6093299<br />steps: 2616.983<br />condition_type: Bones\",\"gaitspeed: 0.6145663<br />steps: 2650.567<br />condition_type: Bones\",\"gaitspeed: 0.6198028<br />steps: 2684.152<br />condition_type: Bones\",\"gaitspeed: 0.6250392<br />steps: 2717.736<br />condition_type: Bones\",\"gaitspeed: 0.6302756<br />steps: 2751.321<br />condition_type: Bones\",\"gaitspeed: 0.6355120<br />steps: 2784.905<br />condition_type: Bones\",\"gaitspeed: 0.6407484<br />steps: 2818.490<br />condition_type: Bones\",\"gaitspeed: 0.6459848<br />steps: 2852.074<br />condition_type: Bones\",\"gaitspeed: 0.6512213<br />steps: 2885.659<br />condition_type: Bones\",\"gaitspeed: 0.6564577<br />steps: 2919.243<br />condition_type: Bones\",\"gaitspeed: 0.6616941<br />steps: 2952.828<br />condition_type: Bones\",\"gaitspeed: 0.6669305<br />steps: 2986.412<br />condition_type: Bones\",\"gaitspeed: 0.6721669<br />steps: 3019.997<br />condition_type: Bones\",\"gaitspeed: 0.6774034<br />steps: 3053.581<br />condition_type: Bones\",\"gaitspeed: 0.6826398<br />steps: 3087.166<br />condition_type: Bones\",\"gaitspeed: 0.6878762<br />steps: 3120.750<br />condition_type: Bones\",\"gaitspeed: 0.6931126<br />steps: 3154.335<br />condition_type: Bones\",\"gaitspeed: 0.6983490<br />steps: 3187.919<br />condition_type: Bones\",\"gaitspeed: 0.7035855<br />steps: 3221.504<br />condition_type: Bones\",\"gaitspeed: 0.7088219<br />steps: 3255.088<br />condition_type: Bones\",\"gaitspeed: 0.7140583<br />steps: 3288.673<br />condition_type: Bones\",\"gaitspeed: 0.7192947<br />steps: 3322.257<br />condition_type: Bones\",\"gaitspeed: 0.7245311<br />steps: 3355.842<br />condition_type: Bones\",\"gaitspeed: 0.7297676<br />steps: 3389.426<br />condition_type: Bones\",\"gaitspeed: 0.7350040<br />steps: 3423.011<br />condition_type: Bones\",\"gaitspeed: 0.7402404<br />steps: 3456.595<br />condition_type: Bones\",\"gaitspeed: 0.7454768<br />steps: 3490.180<br />condition_type: Bones\",\"gaitspeed: 0.7507132<br />steps: 3523.764<br />condition_type: Bones\",\"gaitspeed: 0.7559497<br />steps: 3557.349<br />condition_type: Bones\",\"gaitspeed: 0.7611861<br />steps: 3590.933<br />condition_type: Bones\",\"gaitspeed: 0.7664225<br />steps: 3624.518<br />condition_type: Bones\",\"gaitspeed: 0.7716589<br />steps: 3658.102<br />condition_type: Bones\",\"gaitspeed: 0.7768953<br />steps: 3691.687<br />condition_type: Bones\",\"gaitspeed: 0.7821318<br />steps: 3725.271<br />condition_type: Bones\",\"gaitspeed: 0.7873682<br />steps: 3758.856<br />condition_type: Bones\",\"gaitspeed: 0.7926046<br />steps: 3792.440<br />condition_type: Bones\",\"gaitspeed: 0.7978410<br />steps: 3826.025<br />condition_type: Bones\",\"gaitspeed: 0.8030774<br />steps: 3859.609<br />condition_type: Bones\",\"gaitspeed: 0.8083139<br />steps: 3893.194<br />condition_type: Bones\",\"gaitspeed: 0.8135503<br />steps: 3926.778<br />condition_type: Bones\",\"gaitspeed: 0.8187867<br />steps: 3960.363<br />condition_type: Bones\",\"gaitspeed: 0.8240231<br />steps: 3993.947<br />condition_type: Bones\",\"gaitspeed: 0.8292595<br />steps: 4027.532<br />condition_type: Bones\",\"gaitspeed: 0.8344960<br />steps: 4061.116<br />condition_type: Bones\",\"gaitspeed: 0.8397324<br />steps: 4094.701<br />condition_type: Bones\",\"gaitspeed: 0.8449688<br />steps: 4128.285<br />condition_type: Bones\",\"gaitspeed: 0.8502052<br />steps: 4161.870<br />condition_type: Bones\",\"gaitspeed: 0.8554416<br />steps: 4195.454<br />condition_type: Bones\",\"gaitspeed: 0.8606781<br />steps: 4229.039<br />condition_type: Bones\",\"gaitspeed: 0.8659145<br />steps: 4262.623<br />condition_type: Bones\",\"gaitspeed: 0.8711509<br />steps: 4296.208<br />condition_type: Bones\",\"gaitspeed: 0.8763873<br />steps: 4329.792<br />condition_type: Bones\",\"gaitspeed: 0.8816237<br />steps: 4363.377<br />condition_type: Bones\",\"gaitspeed: 0.8868602<br />steps: 4396.961<br />condition_type: Bones\",\"gaitspeed: 0.8920966<br />steps: 4430.546<br />condition_type: Bones\",\"gaitspeed: 0.8973330<br />steps: 4464.130<br />condition_type: Bones\",\"gaitspeed: 0.9025694<br />steps: 4497.714<br />condition_type: Bones\",\"gaitspeed: 0.9078058<br />steps: 4531.299<br />condition_type: Bones\",\"gaitspeed: 0.9130423<br />steps: 4564.883<br />condition_type: Bones\",\"gaitspeed: 0.9182787<br />steps: 4598.468<br />condition_type: Bones\",\"gaitspeed: 0.9235151<br />steps: 4632.052<br />condition_type: Bones\",\"gaitspeed: 0.9287515<br />steps: 4665.637<br />condition_type: Bones\",\"gaitspeed: 0.9339879<br />steps: 4699.221<br />condition_type: Bones\",\"gaitspeed: 0.9392244<br />steps: 4732.806<br />condition_type: Bones\",\"gaitspeed: 0.9444608<br />steps: 4766.390<br />condition_type: Bones\",\"gaitspeed: 0.9496972<br />steps: 4799.975<br />condition_type: Bones\",\"gaitspeed: 0.9549336<br />steps: 4833.559<br />condition_type: Bones\",\"gaitspeed: 0.9601700<br />steps: 4867.144<br />condition_type: Bones\",\"gaitspeed: 0.9654065<br />steps: 4900.728<br />condition_type: Bones\",\"gaitspeed: 0.9706429<br />steps: 4934.313<br />condition_type: Bones\",\"gaitspeed: 0.9758793<br />steps: 4967.897<br />condition_type: Bones\",\"gaitspeed: 0.9811157<br />steps: 5001.482<br />condition_type: Bones\",\"gaitspeed: 0.9863521<br />steps: 5035.066<br />condition_type: Bones\",\"gaitspeed: 0.9915885<br />steps: 5068.651<br />condition_type: Bones\",\"gaitspeed: 0.9968250<br />steps: 5102.235<br />condition_type: Bones\",\"gaitspeed: 1.0020614<br />steps: 5135.820<br />condition_type: Bones\",\"gaitspeed: 1.0072978<br />steps: 5169.404<br />condition_type: Bones\",\"gaitspeed: 1.0125342<br />steps: 5202.989<br />condition_type: Bones\",\"gaitspeed: 1.0177706<br />steps: 5236.573<br />condition_type: Bones\",\"gaitspeed: 1.0177706<br />steps: 5236.573<br />condition_type: Bones\",\"gaitspeed: 1.0125342<br />steps: 5202.989<br />condition_type: Bones\",\"gaitspeed: 1.0072978<br />steps: 5169.404<br />condition_type: Bones\",\"gaitspeed: 1.0020614<br />steps: 5135.820<br />condition_type: Bones\",\"gaitspeed: 0.9968250<br />steps: 5102.235<br />condition_type: Bones\",\"gaitspeed: 0.9915885<br />steps: 5068.651<br />condition_type: Bones\",\"gaitspeed: 0.9863521<br />steps: 5035.066<br />condition_type: Bones\",\"gaitspeed: 0.9811157<br />steps: 5001.482<br />condition_type: Bones\",\"gaitspeed: 0.9758793<br />steps: 4967.897<br />condition_type: Bones\",\"gaitspeed: 0.9706429<br />steps: 4934.313<br />condition_type: Bones\",\"gaitspeed: 0.9654065<br />steps: 4900.728<br />condition_type: Bones\",\"gaitspeed: 0.9601700<br />steps: 4867.144<br />condition_type: Bones\",\"gaitspeed: 0.9549336<br />steps: 4833.559<br />condition_type: Bones\",\"gaitspeed: 0.9496972<br />steps: 4799.975<br />condition_type: Bones\",\"gaitspeed: 0.9444608<br />steps: 4766.390<br />condition_type: Bones\",\"gaitspeed: 0.9392244<br />steps: 4732.806<br />condition_type: Bones\",\"gaitspeed: 0.9339879<br />steps: 4699.221<br />condition_type: Bones\",\"gaitspeed: 0.9287515<br />steps: 4665.637<br />condition_type: Bones\",\"gaitspeed: 0.9235151<br />steps: 4632.052<br />condition_type: Bones\",\"gaitspeed: 0.9182787<br />steps: 4598.468<br />condition_type: Bones\",\"gaitspeed: 0.9130423<br />steps: 4564.883<br />condition_type: Bones\",\"gaitspeed: 0.9078058<br />steps: 4531.299<br />condition_type: Bones\",\"gaitspeed: 0.9025694<br />steps: 4497.714<br />condition_type: Bones\",\"gaitspeed: 0.8973330<br />steps: 4464.130<br />condition_type: Bones\",\"gaitspeed: 0.8920966<br />steps: 4430.546<br />condition_type: Bones\",\"gaitspeed: 0.8868602<br />steps: 4396.961<br />condition_type: Bones\",\"gaitspeed: 0.8816237<br />steps: 4363.377<br />condition_type: Bones\",\"gaitspeed: 0.8763873<br />steps: 4329.792<br />condition_type: Bones\",\"gaitspeed: 0.8711509<br />steps: 4296.208<br />condition_type: Bones\",\"gaitspeed: 0.8659145<br />steps: 4262.623<br />condition_type: Bones\",\"gaitspeed: 0.8606781<br />steps: 4229.039<br />condition_type: Bones\",\"gaitspeed: 0.8554416<br />steps: 4195.454<br />condition_type: Bones\",\"gaitspeed: 0.8502052<br />steps: 4161.870<br />condition_type: Bones\",\"gaitspeed: 0.8449688<br />steps: 4128.285<br />condition_type: Bones\",\"gaitspeed: 0.8397324<br />steps: 4094.701<br />condition_type: Bones\",\"gaitspeed: 0.8344960<br />steps: 4061.116<br />condition_type: Bones\",\"gaitspeed: 0.8292595<br />steps: 4027.532<br />condition_type: Bones\",\"gaitspeed: 0.8240231<br />steps: 3993.947<br />condition_type: Bones\",\"gaitspeed: 0.8187867<br />steps: 3960.363<br />condition_type: Bones\",\"gaitspeed: 0.8135503<br />steps: 3926.778<br />condition_type: Bones\",\"gaitspeed: 0.8083139<br />steps: 3893.194<br />condition_type: Bones\",\"gaitspeed: 0.8030774<br />steps: 3859.609<br />condition_type: Bones\",\"gaitspeed: 0.7978410<br />steps: 3826.025<br />condition_type: Bones\",\"gaitspeed: 0.7926046<br />steps: 3792.440<br />condition_type: Bones\",\"gaitspeed: 0.7873682<br />steps: 3758.856<br />condition_type: Bones\",\"gaitspeed: 0.7821318<br />steps: 3725.271<br />condition_type: Bones\",\"gaitspeed: 0.7768953<br />steps: 3691.687<br />condition_type: Bones\",\"gaitspeed: 0.7716589<br />steps: 3658.102<br />condition_type: Bones\",\"gaitspeed: 0.7664225<br />steps: 3624.518<br />condition_type: Bones\",\"gaitspeed: 0.7611861<br />steps: 3590.933<br />condition_type: Bones\",\"gaitspeed: 0.7559497<br />steps: 3557.349<br />condition_type: Bones\",\"gaitspeed: 0.7507132<br />steps: 3523.764<br />condition_type: Bones\",\"gaitspeed: 0.7454768<br />steps: 3490.180<br />condition_type: Bones\",\"gaitspeed: 0.7402404<br />steps: 3456.595<br />condition_type: Bones\",\"gaitspeed: 0.7350040<br />steps: 3423.011<br />condition_type: Bones\",\"gaitspeed: 0.7297676<br />steps: 3389.426<br />condition_type: Bones\",\"gaitspeed: 0.7245311<br />steps: 3355.842<br />condition_type: Bones\",\"gaitspeed: 0.7192947<br />steps: 3322.257<br />condition_type: Bones\",\"gaitspeed: 0.7140583<br />steps: 3288.673<br />condition_type: Bones\",\"gaitspeed: 0.7088219<br />steps: 3255.088<br />condition_type: Bones\",\"gaitspeed: 0.7035855<br />steps: 3221.504<br />condition_type: Bones\",\"gaitspeed: 0.6983490<br />steps: 3187.919<br />condition_type: Bones\",\"gaitspeed: 0.6931126<br />steps: 3154.335<br />condition_type: Bones\",\"gaitspeed: 0.6878762<br />steps: 3120.750<br />condition_type: Bones\",\"gaitspeed: 0.6826398<br />steps: 3087.166<br />condition_type: Bones\",\"gaitspeed: 0.6774034<br />steps: 3053.581<br />condition_type: Bones\",\"gaitspeed: 0.6721669<br />steps: 3019.997<br />condition_type: Bones\",\"gaitspeed: 0.6669305<br />steps: 2986.412<br />condition_type: Bones\",\"gaitspeed: 0.6616941<br />steps: 2952.828<br />condition_type: Bones\",\"gaitspeed: 0.6564577<br />steps: 2919.243<br />condition_type: Bones\",\"gaitspeed: 0.6512213<br />steps: 2885.659<br />condition_type: Bones\",\"gaitspeed: 0.6459848<br />steps: 2852.074<br />condition_type: Bones\",\"gaitspeed: 0.6407484<br />steps: 2818.490<br />condition_type: Bones\",\"gaitspeed: 0.6355120<br />steps: 2784.905<br />condition_type: Bones\",\"gaitspeed: 0.6302756<br />steps: 2751.321<br />condition_type: Bones\",\"gaitspeed: 0.6250392<br />steps: 2717.736<br />condition_type: Bones\",\"gaitspeed: 0.6198028<br />steps: 2684.152<br />condition_type: Bones\",\"gaitspeed: 0.6145663<br />steps: 2650.567<br />condition_type: Bones\",\"gaitspeed: 0.6093299<br />steps: 2616.983<br />condition_type: Bones\",\"gaitspeed: 0.6040935<br />steps: 2583.399<br />condition_type: Bones\",\"gaitspeed: 0.6040935<br />steps: 2583.399<br />condition_type: Bones\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.7795275590551185,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(153,153,153,0.4)\",\"hoveron\":\"points\",\"hoverinfo\":\"x+y\",\"name\":\"Bones\",\"legendgroup\":\"Bones\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.56474530700000003,0.57148537005063293,0.57822543310126584,0.58496549615189875,0.59170555920253165,0.59844562225316456,0.60518568530379746,0.61192574835443037,0.61866581140506338,0.62540587445569629,0.63214593750632919,0.6388860005569621,0.645626063607595,0.65236612665822791,0.65910618970886081,0.66584625275949372,0.67258631581012662,0.67932637886075953,0.68606644191139243,0.69280650496202534,0.69954656801265824,0.70628663106329115,0.71302669411392405,0.71976675716455696,0.72650682021518986,0.73324688326582277,0.73998694631645567,0.74672700936708869,0.7534670724177216,0.7602071354683545,0.76694719851898741,0.77368726156962031,0.78042732462025322,0.78716738767088612,0.79390745072151903,0.80064751377215193,0.80738757682278484,0.81412763987341774,0.82086770292405076,0.82760776597468366,0.83434782902531657,0.84108789207594947,0.84782795512658238,0.85456801817721528,0.86130808122784819,0.86804814427848109,0.874788207329114,0.8815282703797469,0.88826833343037981,0.89500839648101271,0.90174845953164562,0.90848852258227852,0.91522858563291143,0.92196864868354433,0.92870871173417724,0.93544877478481014,0.94218883783544305,0.94892890088607595,0.95566896393670886,0.96240902698734176,0.96914909003797478,0.97588915308860769,0.98262921613924059,0.9893692791898735,0.9961093422405064,1.0028494052911392,1.0095894683417721,1.016329531392405,1.0230695944430379,1.029809657493671,1.0365497205443039,1.0432897835949368,1.0500298466455698,1.0567699096962027,1.0635099727468356,1.0702500357974685,1.0769900988481014,1.0837301618987343,1.0904702249493672,1.0972102880000001,1.0972102880000001,1.0904702249493672,1.0837301618987343,1.0769900988481014,1.0702500357974685,1.0635099727468356,1.0567699096962027,1.0500298466455698,1.0432897835949368,1.0365497205443039,1.029809657493671,1.0230695944430379,1.016329531392405,1.0095894683417721,1.0028494052911392,0.9961093422405064,0.9893692791898735,0.98262921613924059,0.97588915308860769,0.96914909003797478,0.96240902698734176,0.95566896393670886,0.94892890088607595,0.94218883783544305,0.93544877478481014,0.92870871173417724,0.92196864868354433,0.91522858563291143,0.90848852258227852,0.90174845953164562,0.89500839648101271,0.88826833343037981,0.8815282703797469,0.874788207329114,0.86804814427848109,0.86130808122784819,0.85456801817721528,0.84782795512658238,0.84108789207594947,0.83434782902531657,0.82760776597468366,0.82086770292405076,0.81412763987341774,0.80738757682278484,0.80064751377215193,0.79390745072151903,0.78716738767088612,0.78042732462025322,0.77368726156962031,0.76694719851898741,0.7602071354683545,0.7534670724177216,0.74672700936708869,0.73998694631645567,0.73324688326582277,0.72650682021518986,0.71976675716455696,0.71302669411392405,0.70628663106329115,0.69954656801265824,0.69280650496202534,0.68606644191139243,0.67932637886075953,0.67258631581012662,0.66584625275949372,0.65910618970886081,0.65236612665822791,0.645626063607595,0.6388860005569621,0.63214593750632919,0.62540587445569629,0.61866581140506338,0.61192574835443037,0.60518568530379746,0.59844562225316456,0.59170555920253165,0.58496549615189875,0.57822543310126584,0.57148537005063293,0.56474530700000003,0.56474530700000003],\"y\":[65.360338024332123,163.7263787194679,261.6964027232334,359.24762672559336,456.35570806757869,552.9946343042875,649.13660687263155,744.751919185524,839.8088296877163,934.27343067627498,1028.1095140203547,1121.2784353201964,1213.7389785348505,1305.4472236912052,1396.3564209717817,1486.4168752702953,1575.5758462018589,1663.7774695510618,1750.9627072167355,1837.0693338329695,1922.0319693583635,2005.7821679520662,2088.2485742910912,2169.3571589932089,2249.0315448293086,2327.1934347495662,2403.7631512085154,2478.6602936621534,2551.8045172698066,2623.1164306844767,2692.5186043958829,2759.9366736011334,2825.3005114141652,2888.545439988663,2949.6134396055431,3008.4543098689519,3065.0267337770788,3119.2991953657574,3171.2507053576096,3220.8712968644504,3268.1622642719576,3313.1361320885026,3355.8163554916546,3396.2367690858491,3434.4408135493395,3470.48058019774,3504.4157202352098,3536.3122683036681,3566.2414290570214,3594.2783714537218,3620.5010691007969,3644.9892172184309,3667.8232485109938,3689.0834621753966,3708.8492730061607,3727.198581417153,3744.2072603525226,3759.9487515111227,3774.4937609582994,3787.9100428791062,3800.2622597406735,3811.6119072793745,3822.0172933265617,3831.5335603770168,3840.2127428588719,3848.1038511838551,3855.2529757711945,3861.7034052982085,3867.4957544057306,3872.6680969603217,3877.2561017421222,3881.2931680881893,3884.8105595819993,3887.8375343491066,3890.4014709065805,3892.5279888298028,3894.2410637548987,3895.5631364373116,3896.5152157456905,3897.1169755925016,9418.9083102769891,9319.7342251034279,9220.9104593914362,9122.4566870534763,9024.3939169582009,8926.7445898610531,8829.5326813981537,8732.7838111448891,8636.5253576183277,8540.786578944022,8445.598738705452,8350.9952362396671,8257.0117403268177,8163.6863248334594,8071.0596044004278,7979.1748677050418,7888.0782051665246,7797.8186271966078,7708.4481682234227,7620.0219707417527,7532.5983425829472,7446.2387794833812,7361.0079439101864,7276.9735900484138,7194.2064239634128,7112.7798873540341,7032.7698531644255,6954.2542218084573,6877.3124080806474,6802.0247111779099,6728.4715638046127,6656.7326611809422,6586.8859769139244,6519.0066799620099,6453.1659749791088,6389.4298966071365,6327.8580960502559,6268.5026646240794,6211.4070430068587,6156.6050658030326,6104.120188190167,6053.9649346766364,6006.1405996481162,5960.6372162164225,5917.433795104178,5876.498820347214,5837.7909749437231,5801.26005849785,5766.8480512905089,5734.4902754753884,5704.1166041664219,5675.6526725607209,5649.0210511480018,5624.1423485812666,5600.9362200198448,5579.3222649197296,5559.2208057354583,5540.553545417205,5523.2441067358577,5507.2184603091891,5492.4052508142104,5478.7360324100737,5466.1454250553743,5454.5712033842065,5443.9543292953986,5434.2389385735396,5425.372290833745,5417.3046909697268,5409.9893891640095,5403.3824654434811,5397.4427037671876,5392.1314597353758,5387.4125252171925,5383.2519925097149,5379.6181200576875,5376.481201274024,5373.8134375956379,5371.588816577625,5369.7829955610196,5368.3731912357844,65.360338024332123],\"text\":[\"gaitspeed: 0.5647453<br />steps: 2716.867<br />condition_type: Muscles\",\"gaitspeed: 0.5714854<br />steps: 2766.755<br />condition_type: Muscles\",\"gaitspeed: 0.5782254<br />steps: 2816.643<br />condition_type: Muscles\",\"gaitspeed: 0.5849655<br />steps: 2866.531<br />condition_type: Muscles\",\"gaitspeed: 0.5917056<br />steps: 2916.418<br />condition_type: Muscles\",\"gaitspeed: 0.5984456<br />steps: 2966.306<br />condition_type: Muscles\",\"gaitspeed: 0.6051857<br />steps: 3016.194<br />condition_type: Muscles\",\"gaitspeed: 0.6119257<br />steps: 3066.082<br />condition_type: Muscles\",\"gaitspeed: 0.6186658<br />steps: 3115.970<br />condition_type: Muscles\",\"gaitspeed: 0.6254059<br />steps: 3165.858<br />condition_type: Muscles\",\"gaitspeed: 0.6321459<br />steps: 3215.746<br />condition_type: Muscles\",\"gaitspeed: 0.6388860<br />steps: 3265.634<br />condition_type: Muscles\",\"gaitspeed: 0.6456261<br />steps: 3315.522<br />condition_type: Muscles\",\"gaitspeed: 0.6523661<br />steps: 3365.410<br />condition_type: Muscles\",\"gaitspeed: 0.6591062<br />steps: 3415.298<br />condition_type: Muscles\",\"gaitspeed: 0.6658463<br />steps: 3465.186<br />condition_type: Muscles\",\"gaitspeed: 0.6725863<br />steps: 3515.074<br />condition_type: Muscles\",\"gaitspeed: 0.6793264<br />steps: 3564.961<br />condition_type: Muscles\",\"gaitspeed: 0.6860664<br />steps: 3614.849<br />condition_type: Muscles\",\"gaitspeed: 0.6928065<br />steps: 3664.737<br />condition_type: Muscles\",\"gaitspeed: 0.6995466<br />steps: 3714.625<br />condition_type: Muscles\",\"gaitspeed: 0.7062866<br />steps: 3764.513<br />condition_type: Muscles\",\"gaitspeed: 0.7130267<br />steps: 3814.401<br />condition_type: Muscles\",\"gaitspeed: 0.7197668<br />steps: 3864.289<br />condition_type: Muscles\",\"gaitspeed: 0.7265068<br />steps: 3914.177<br />condition_type: Muscles\",\"gaitspeed: 0.7332469<br />steps: 3964.065<br />condition_type: Muscles\",\"gaitspeed: 0.7399869<br />steps: 4013.953<br />condition_type: Muscles\",\"gaitspeed: 0.7467270<br />steps: 4063.841<br />condition_type: Muscles\",\"gaitspeed: 0.7534671<br />steps: 4113.729<br />condition_type: Muscles\",\"gaitspeed: 0.7602071<br />steps: 4163.617<br />condition_type: Muscles\",\"gaitspeed: 0.7669472<br />steps: 4213.504<br />condition_type: Muscles\",\"gaitspeed: 0.7736873<br />steps: 4263.392<br />condition_type: Muscles\",\"gaitspeed: 0.7804273<br />steps: 4313.280<br />condition_type: Muscles\",\"gaitspeed: 0.7871674<br />steps: 4363.168<br />condition_type: Muscles\",\"gaitspeed: 0.7939075<br />steps: 4413.056<br />condition_type: Muscles\",\"gaitspeed: 0.8006475<br />steps: 4462.944<br />condition_type: Muscles\",\"gaitspeed: 0.8073876<br />steps: 4512.832<br />condition_type: Muscles\",\"gaitspeed: 0.8141276<br />steps: 4562.720<br />condition_type: Muscles\",\"gaitspeed: 0.8208677<br />steps: 4612.608<br />condition_type: Muscles\",\"gaitspeed: 0.8276078<br />steps: 4662.496<br />condition_type: Muscles\",\"gaitspeed: 0.8343478<br />steps: 4712.384<br />condition_type: Muscles\",\"gaitspeed: 0.8410879<br />steps: 4762.272<br />condition_type: Muscles\",\"gaitspeed: 0.8478280<br />steps: 4812.160<br />condition_type: Muscles\",\"gaitspeed: 0.8545680<br />steps: 4862.047<br />condition_type: Muscles\",\"gaitspeed: 0.8613081<br />steps: 4911.935<br />condition_type: Muscles\",\"gaitspeed: 0.8680481<br />steps: 4961.823<br />condition_type: Muscles\",\"gaitspeed: 0.8747882<br />steps: 5011.711<br />condition_type: Muscles\",\"gaitspeed: 0.8815283<br />steps: 5061.599<br />condition_type: Muscles\",\"gaitspeed: 0.8882683<br />steps: 5111.487<br />condition_type: Muscles\",\"gaitspeed: 0.8950084<br />steps: 5161.375<br />condition_type: Muscles\",\"gaitspeed: 0.9017485<br />steps: 5211.263<br />condition_type: Muscles\",\"gaitspeed: 0.9084885<br />steps: 5261.151<br />condition_type: Muscles\",\"gaitspeed: 0.9152286<br />steps: 5311.039<br />condition_type: Muscles\",\"gaitspeed: 0.9219686<br />steps: 5360.927<br />condition_type: Muscles\",\"gaitspeed: 0.9287087<br />steps: 5410.815<br />condition_type: Muscles\",\"gaitspeed: 0.9354488<br />steps: 5460.703<br />condition_type: Muscles\",\"gaitspeed: 0.9421888<br />steps: 5510.590<br />condition_type: Muscles\",\"gaitspeed: 0.9489289<br />steps: 5560.478<br />condition_type: Muscles\",\"gaitspeed: 0.9556690<br />steps: 5610.366<br />condition_type: Muscles\",\"gaitspeed: 0.9624090<br />steps: 5660.254<br />condition_type: Muscles\",\"gaitspeed: 0.9691491<br />steps: 5710.142<br />condition_type: Muscles\",\"gaitspeed: 0.9758892<br />steps: 5760.030<br />condition_type: Muscles\",\"gaitspeed: 0.9826292<br />steps: 5809.918<br />condition_type: Muscles\",\"gaitspeed: 0.9893693<br />steps: 5859.806<br />condition_type: Muscles\",\"gaitspeed: 0.9961093<br />steps: 5909.694<br />condition_type: Muscles\",\"gaitspeed: 1.0028494<br />steps: 5959.582<br />condition_type: Muscles\",\"gaitspeed: 1.0095895<br />steps: 6009.470<br />condition_type: Muscles\",\"gaitspeed: 1.0163295<br />steps: 6059.358<br />condition_type: Muscles\",\"gaitspeed: 1.0230696<br />steps: 6109.245<br />condition_type: Muscles\",\"gaitspeed: 1.0298097<br />steps: 6159.133<br />condition_type: Muscles\",\"gaitspeed: 1.0365497<br />steps: 6209.021<br />condition_type: Muscles\",\"gaitspeed: 1.0432898<br />steps: 6258.909<br />condition_type: Muscles\",\"gaitspeed: 1.0500298<br />steps: 6308.797<br />condition_type: Muscles\",\"gaitspeed: 1.0567699<br />steps: 6358.685<br />condition_type: Muscles\",\"gaitspeed: 1.0635100<br />steps: 6408.573<br />condition_type: Muscles\",\"gaitspeed: 1.0702500<br />steps: 6458.461<br />condition_type: Muscles\",\"gaitspeed: 1.0769901<br />steps: 6508.349<br />condition_type: Muscles\",\"gaitspeed: 1.0837302<br />steps: 6558.237<br />condition_type: Muscles\",\"gaitspeed: 1.0904702<br />steps: 6608.125<br />condition_type: Muscles\",\"gaitspeed: 1.0972103<br />steps: 6658.013<br />condition_type: Muscles\",\"gaitspeed: 1.0972103<br />steps: 6658.013<br />condition_type: Muscles\",\"gaitspeed: 1.0904702<br />steps: 6608.125<br />condition_type: Muscles\",\"gaitspeed: 1.0837302<br />steps: 6558.237<br />condition_type: Muscles\",\"gaitspeed: 1.0769901<br />steps: 6508.349<br />condition_type: Muscles\",\"gaitspeed: 1.0702500<br />steps: 6458.461<br />condition_type: Muscles\",\"gaitspeed: 1.0635100<br />steps: 6408.573<br />condition_type: Muscles\",\"gaitspeed: 1.0567699<br />steps: 6358.685<br />condition_type: Muscles\",\"gaitspeed: 1.0500298<br />steps: 6308.797<br />condition_type: Muscles\",\"gaitspeed: 1.0432898<br />steps: 6258.909<br />condition_type: Muscles\",\"gaitspeed: 1.0365497<br />steps: 6209.021<br />condition_type: Muscles\",\"gaitspeed: 1.0298097<br />steps: 6159.133<br />condition_type: Muscles\",\"gaitspeed: 1.0230696<br />steps: 6109.245<br />condition_type: Muscles\",\"gaitspeed: 1.0163295<br />steps: 6059.358<br />condition_type: Muscles\",\"gaitspeed: 1.0095895<br />steps: 6009.470<br />condition_type: Muscles\",\"gaitspeed: 1.0028494<br />steps: 5959.582<br />condition_type: Muscles\",\"gaitspeed: 0.9961093<br />steps: 5909.694<br />condition_type: Muscles\",\"gaitspeed: 0.9893693<br />steps: 5859.806<br />condition_type: Muscles\",\"gaitspeed: 0.9826292<br />steps: 5809.918<br />condition_type: Muscles\",\"gaitspeed: 0.9758892<br />steps: 5760.030<br />condition_type: Muscles\",\"gaitspeed: 0.9691491<br />steps: 5710.142<br />condition_type: Muscles\",\"gaitspeed: 0.9624090<br />steps: 5660.254<br />condition_type: Muscles\",\"gaitspeed: 0.9556690<br />steps: 5610.366<br />condition_type: Muscles\",\"gaitspeed: 0.9489289<br />steps: 5560.478<br />condition_type: Muscles\",\"gaitspeed: 0.9421888<br />steps: 5510.590<br />condition_type: Muscles\",\"gaitspeed: 0.9354488<br />steps: 5460.703<br />condition_type: Muscles\",\"gaitspeed: 0.9287087<br />steps: 5410.815<br />condition_type: Muscles\",\"gaitspeed: 0.9219686<br />steps: 5360.927<br />condition_type: Muscles\",\"gaitspeed: 0.9152286<br />steps: 5311.039<br />condition_type: Muscles\",\"gaitspeed: 0.9084885<br />steps: 5261.151<br />condition_type: Muscles\",\"gaitspeed: 0.9017485<br />steps: 5211.263<br />condition_type: Muscles\",\"gaitspeed: 0.8950084<br />steps: 5161.375<br />condition_type: Muscles\",\"gaitspeed: 0.8882683<br />steps: 5111.487<br />condition_type: Muscles\",\"gaitspeed: 0.8815283<br />steps: 5061.599<br />condition_type: Muscles\",\"gaitspeed: 0.8747882<br />steps: 5011.711<br />condition_type: Muscles\",\"gaitspeed: 0.8680481<br />steps: 4961.823<br />condition_type: Muscles\",\"gaitspeed: 0.8613081<br />steps: 4911.935<br />condition_type: Muscles\",\"gaitspeed: 0.8545680<br />steps: 4862.047<br />condition_type: Muscles\",\"gaitspeed: 0.8478280<br />steps: 4812.160<br />condition_type: Muscles\",\"gaitspeed: 0.8410879<br />steps: 4762.272<br />condition_type: Muscles\",\"gaitspeed: 0.8343478<br />steps: 4712.384<br />condition_type: Muscles\",\"gaitspeed: 0.8276078<br />steps: 4662.496<br />condition_type: Muscles\",\"gaitspeed: 0.8208677<br />steps: 4612.608<br />condition_type: Muscles\",\"gaitspeed: 0.8141276<br />steps: 4562.720<br />condition_type: Muscles\",\"gaitspeed: 0.8073876<br />steps: 4512.832<br />condition_type: Muscles\",\"gaitspeed: 0.8006475<br />steps: 4462.944<br />condition_type: Muscles\",\"gaitspeed: 0.7939075<br />steps: 4413.056<br />condition_type: Muscles\",\"gaitspeed: 0.7871674<br />steps: 4363.168<br />condition_type: Muscles\",\"gaitspeed: 0.7804273<br />steps: 4313.280<br />condition_type: Muscles\",\"gaitspeed: 0.7736873<br />steps: 4263.392<br />condition_type: Muscles\",\"gaitspeed: 0.7669472<br />steps: 4213.504<br />condition_type: Muscles\",\"gaitspeed: 0.7602071<br />steps: 4163.617<br />condition_type: Muscles\",\"gaitspeed: 0.7534671<br />steps: 4113.729<br />condition_type: Muscles\",\"gaitspeed: 0.7467270<br />steps: 4063.841<br />condition_type: Muscles\",\"gaitspeed: 0.7399869<br />steps: 4013.953<br />condition_type: Muscles\",\"gaitspeed: 0.7332469<br />steps: 3964.065<br />condition_type: Muscles\",\"gaitspeed: 0.7265068<br />steps: 3914.177<br />condition_type: Muscles\",\"gaitspeed: 0.7197668<br />steps: 3864.289<br />condition_type: Muscles\",\"gaitspeed: 0.7130267<br />steps: 3814.401<br />condition_type: Muscles\",\"gaitspeed: 0.7062866<br />steps: 3764.513<br />condition_type: Muscles\",\"gaitspeed: 0.6995466<br />steps: 3714.625<br />condition_type: Muscles\",\"gaitspeed: 0.6928065<br />steps: 3664.737<br />condition_type: Muscles\",\"gaitspeed: 0.6860664<br />steps: 3614.849<br />condition_type: Muscles\",\"gaitspeed: 0.6793264<br />steps: 3564.961<br />condition_type: Muscles\",\"gaitspeed: 0.6725863<br />steps: 3515.074<br />condition_type: Muscles\",\"gaitspeed: 0.6658463<br />steps: 3465.186<br />condition_type: Muscles\",\"gaitspeed: 0.6591062<br />steps: 3415.298<br />condition_type: Muscles\",\"gaitspeed: 0.6523661<br />steps: 3365.410<br />condition_type: Muscles\",\"gaitspeed: 0.6456261<br />steps: 3315.522<br />condition_type: Muscles\",\"gaitspeed: 0.6388860<br />steps: 3265.634<br />condition_type: Muscles\",\"gaitspeed: 0.6321459<br />steps: 3215.746<br />condition_type: Muscles\",\"gaitspeed: 0.6254059<br />steps: 3165.858<br />condition_type: Muscles\",\"gaitspeed: 0.6186658<br />steps: 3115.970<br />condition_type: Muscles\",\"gaitspeed: 0.6119257<br />steps: 3066.082<br />condition_type: Muscles\",\"gaitspeed: 0.6051857<br />steps: 3016.194<br />condition_type: Muscles\",\"gaitspeed: 0.5984456<br />steps: 2966.306<br />condition_type: Muscles\",\"gaitspeed: 0.5917056<br />steps: 2916.418<br />condition_type: Muscles\",\"gaitspeed: 0.5849655<br />steps: 2866.531<br />condition_type: Muscles\",\"gaitspeed: 0.5782254<br />steps: 2816.643<br />condition_type: Muscles\",\"gaitspeed: 0.5714854<br />steps: 2766.755<br />condition_type: Muscles\",\"gaitspeed: 0.5647453<br />steps: 2716.867<br />condition_type: Muscles\",\"gaitspeed: 0.5647453<br />steps: 2716.867<br />condition_type: Muscles\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.7795275590551185,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(153,153,153,0.4)\",\"hoveron\":\"points\",\"hoverinfo\":\"x+y\",\"name\":\"Muscles\",\"legendgroup\":\"Muscles\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[0.84450739600000002,0.85024096672151905,0.85597453744303797,0.86170810816455701,0.86744167888607593,0.87317524960759496,0.87890882032911399,0.88464239105063291,0.89037596177215195,0.89610953249367087,0.9018431032151899,0.90757667393670882,0.91331024465822785,0.91904381537974689,0.92477738610126581,0.93051095682278484,0.93624452754430376,0.94197809826582279,0.94771166898734172,0.95344523970886075,0.95917881043037978,0.9649123811518987,0.97064595187341773,0.97637952259493677,0.98211309331645569,0.98784666403797472,0.99358023475949364,0.99931380548101267,1.0050473762025316,1.0107809469240507,1.0165145176455697,1.0222480883670886,1.0279816590886075,1.0337152298101266,1.0394488005316456,1.0451823712531645,1.0509159419746834,1.0566495126962026,1.0623830834177215,1.0681166541392404,1.0738502248607595,1.0795837955822785,1.0853173663037974,1.0910509370253165,1.0967845077468354,1.1025180784683544,1.1082516491898735,1.1139852199113924,1.1197187906329114,1.1254523613544303,1.1311859320759494,1.1369195027974683,1.1426530735189873,1.1483866442405062,1.1541202149620253,1.1598537856835442,1.1655873564050632,1.1713209271265823,1.1770544978481012,1.1827880685696202,1.1885216392911393,1.1942552100126582,1.1999887807341771,1.2057223514556963,1.2114559221772152,1.2171894928987341,1.222923063620253,1.2286566343417722,1.2343902050632911,1.24012377578481,1.245857346506329,1.2515909172278481,1.257324487949367,1.2630580586708859,1.2687916293924051,1.274525200113924,1.2802587708354429,1.2859923415569621,1.291725912278481,1.2974594829999999,1.2974594829999999,1.2974594829999999,1.291725912278481,1.2859923415569621,1.2802587708354429,1.274525200113924,1.2687916293924051,1.2630580586708859,1.257324487949367,1.2515909172278481,1.245857346506329,1.24012377578481,1.2343902050632911,1.2286566343417722,1.222923063620253,1.2171894928987341,1.2114559221772152,1.2057223514556963,1.1999887807341771,1.1942552100126582,1.1885216392911393,1.1827880685696202,1.1770544978481012,1.1713209271265823,1.1655873564050632,1.1598537856835442,1.1541202149620253,1.1483866442405062,1.1426530735189873,1.1369195027974683,1.1311859320759494,1.1254523613544303,1.1197187906329114,1.1139852199113924,1.1082516491898735,1.1025180784683544,1.0967845077468354,1.0910509370253165,1.0853173663037974,1.0795837955822785,1.0738502248607595,1.0681166541392404,1.0623830834177215,1.0566495126962026,1.0509159419746834,1.0451823712531645,1.0394488005316456,1.0337152298101266,1.0279816590886075,1.0222480883670886,1.0165145176455697,1.0107809469240507,1.0050473762025316,0.99931380548101267,0.99358023475949364,0.98784666403797472,0.98211309331645569,0.97637952259493677,0.97064595187341773,0.9649123811518987,0.95917881043037978,0.95344523970886075,0.94771166898734172,0.94197809826582279,0.93624452754430376,0.93051095682278484,0.92477738610126581,0.91904381537974689,0.91331024465822785,0.90757667393670882,0.9018431032151899,0.89610953249367087,0.89037596177215195,0.88464239105063291,0.87890882032911399,0.87317524960759496,0.86744167888607593,0.86170810816455701,0.85597453744303797,0.85024096672151905,0.84450739600000002,0.84450739600000002],\"y\":[3287.6369101962155,3351.2089745396888,3414.7201406542454,3478.1672053212451,3541.5467511170068,3604.855129632364,3668.0884432633911,3731.2425254550749,3794.3129192729475,3857.2948541718306,3920.1832208260475,3982.9725438823575,4045.6569524963065,4108.2301485153303,4170.6853721792886,4233.0153652223507,4295.2123312812755,4357.26789354639,4419.1730496356195,4480.9181237321764,4542.4927161068554,4603.8856502510152,4665.0849179812712,4726.0776230479096,4786.8499239921512,4847.3869772591697,4907.6728818904376,4967.690627495469,5027.4220476420669,5086.8477813047239,5145.9472455656132,5204.6986233563639,5263.0788706335406,5321.063747955066,5378.6278819072895,5435.7448621432068,5492.3873798293307,5548.5274129445015,5604.136463000511,5659.1858462420787,5713.6470401399229,5767.4920829826933,5820.6940206580775,5873.2273904694357,5925.0687273796902,5976.1970738625068,6026.5944711254233,6076.2464074321715,6125.1421991014631,6173.2752818200452,6220.6433942190615,6267.2486419274301,6313.0974379164463,6358.2003230351811,6402.5716782697982,6446.2293465846496,6489.1941865912677,6531.4895824335663,6573.1409342025208,6614.1751512156297,6654.6201671203835,6694.5044915878716,6733.8568089080964,6772.7056295407256,6811.078996936877,6849.0042489125408,6886.5078305833204,6923.6151543329788,6960.3505013940767,6996.7369592483083,7032.7963890793762,7068.5494178140507,7104.0154497649801,7139.2126934609087,7174.1581998545298,7208.8679086928114,7243.3567003912513,7277.6384512559998,7311.7260903392726,7345.6316565920151,7345.6316565920151,8666.077719389179,8604.509423478843,8543.1232003990335,8481.931089100699,8420.9460186360575,8360.1818653112605,8299.6535095417967,8239.3768910746458,8179.3690608624929,8119.6482274340815,8060.2337951020709,8001.1463907932202,7942.4078756912395,7884.0413372778121,7826.0710567855131,7768.5224465980946,7711.4219518311675,7654.7969103007108,7598.675365457857,7543.0858277622629,7488.0569815039344,7433.617336353961,7379.794825959837,7326.6163596390497,7274.1073374825855,7222.2911436343584,7171.1886367058896,7120.8176596615458,7071.1925934874798,7022.3239790327698,6974.2182292687003,6926.8774498242037,6880.2993793304131,6834.4774534740827,6789.4009885739133,6745.0554728936513,6701.4229476408236,6658.4824552890996,6616.2105308014015,6574.5817114810898,6533.5690432158517,6493.1445642943372,6453.2797521872681,6413.945923139353,6375.1145786623983,6336.7576967352334,6298.8479685243783,6261.3589836828178,6224.2653687969159,6187.5428844245844,6151.1684865223951,6115.1203580219662,6079.3779160054855,6043.9217994474348,6008.7338419156204,5973.7970330195567,5939.095471800716,5904.6143147042721,5870.3397202714459,5836.2587922525272,5802.359522464124,5768.630734397595,5735.0620283237458,5701.6437284257781,5668.3668323216207,5635.2229632016006,5602.2043247024803,5569.3036585584223,5536.5142050092891,5503.8296659025164,5471.2441703936511,5438.7522431294556,5406.3487747842455,5374.0289948128475,5341.7884462807924,5309.6229626330678,5277.5286462657505,5245.5018487696643,5213.5391527211423,5181.6373549015334,3287.6369101962155],\"text\":[\"gaitspeed: 0.8445074<br />steps: 4234.637<br />condition_type: None\",\"gaitspeed: 0.8502410<br />steps: 4282.374<br />condition_type: None\",\"gaitspeed: 0.8559745<br />steps: 4330.111<br />condition_type: None\",\"gaitspeed: 0.8617081<br />steps: 4377.848<br />condition_type: None\",\"gaitspeed: 0.8674417<br />steps: 4425.585<br />condition_type: None\",\"gaitspeed: 0.8731752<br />steps: 4473.322<br />condition_type: None\",\"gaitspeed: 0.8789088<br />steps: 4521.059<br />condition_type: None\",\"gaitspeed: 0.8846424<br />steps: 4568.796<br />condition_type: None\",\"gaitspeed: 0.8903760<br />steps: 4616.533<br />condition_type: None\",\"gaitspeed: 0.8961095<br />steps: 4664.270<br />condition_type: None\",\"gaitspeed: 0.9018431<br />steps: 4712.006<br />condition_type: None\",\"gaitspeed: 0.9075767<br />steps: 4759.743<br />condition_type: None\",\"gaitspeed: 0.9133102<br />steps: 4807.480<br />condition_type: None\",\"gaitspeed: 0.9190438<br />steps: 4855.217<br />condition_type: None\",\"gaitspeed: 0.9247774<br />steps: 4902.954<br />condition_type: None\",\"gaitspeed: 0.9305110<br />steps: 4950.691<br />condition_type: None\",\"gaitspeed: 0.9362445<br />steps: 4998.428<br />condition_type: None\",\"gaitspeed: 0.9419781<br />steps: 5046.165<br />condition_type: None\",\"gaitspeed: 0.9477117<br />steps: 5093.902<br />condition_type: None\",\"gaitspeed: 0.9534452<br />steps: 5141.639<br />condition_type: None\",\"gaitspeed: 0.9591788<br />steps: 5189.376<br />condition_type: None\",\"gaitspeed: 0.9649124<br />steps: 5237.113<br />condition_type: None\",\"gaitspeed: 0.9706460<br />steps: 5284.850<br />condition_type: None\",\"gaitspeed: 0.9763795<br />steps: 5332.587<br />condition_type: None\",\"gaitspeed: 0.9821131<br />steps: 5380.323<br />condition_type: None\",\"gaitspeed: 0.9878467<br />steps: 5428.060<br />condition_type: None\",\"gaitspeed: 0.9935802<br />steps: 5475.797<br />condition_type: None\",\"gaitspeed: 0.9993138<br />steps: 5523.534<br />condition_type: None\",\"gaitspeed: 1.0050474<br />steps: 5571.271<br />condition_type: None\",\"gaitspeed: 1.0107809<br />steps: 5619.008<br />condition_type: None\",\"gaitspeed: 1.0165145<br />steps: 5666.745<br />condition_type: None\",\"gaitspeed: 1.0222481<br />steps: 5714.482<br />condition_type: None\",\"gaitspeed: 1.0279817<br />steps: 5762.219<br />condition_type: None\",\"gaitspeed: 1.0337152<br />steps: 5809.956<br />condition_type: None\",\"gaitspeed: 1.0394488<br />steps: 5857.693<br />condition_type: None\",\"gaitspeed: 1.0451824<br />steps: 5905.430<br />condition_type: None\",\"gaitspeed: 1.0509159<br />steps: 5953.167<br />condition_type: None\",\"gaitspeed: 1.0566495<br />steps: 6000.904<br />condition_type: None\",\"gaitspeed: 1.0623831<br />steps: 6048.641<br />condition_type: None\",\"gaitspeed: 1.0681167<br />steps: 6096.377<br />condition_type: None\",\"gaitspeed: 1.0738502<br />steps: 6144.114<br />condition_type: None\",\"gaitspeed: 1.0795838<br />steps: 6191.851<br />condition_type: None\",\"gaitspeed: 1.0853174<br />steps: 6239.588<br />condition_type: None\",\"gaitspeed: 1.0910509<br />steps: 6287.325<br />condition_type: None\",\"gaitspeed: 1.0967845<br />steps: 6335.062<br />condition_type: None\",\"gaitspeed: 1.1025181<br />steps: 6382.799<br />condition_type: None\",\"gaitspeed: 1.1082516<br />steps: 6430.536<br />condition_type: None\",\"gaitspeed: 1.1139852<br />steps: 6478.273<br />condition_type: None\",\"gaitspeed: 1.1197188<br />steps: 6526.010<br />condition_type: None\",\"gaitspeed: 1.1254524<br />steps: 6573.747<br />condition_type: None\",\"gaitspeed: 1.1311859<br />steps: 6621.484<br />condition_type: None\",\"gaitspeed: 1.1369195<br />steps: 6669.221<br />condition_type: None\",\"gaitspeed: 1.1426531<br />steps: 6716.958<br />condition_type: None\",\"gaitspeed: 1.1483866<br />steps: 6764.694<br />condition_type: None\",\"gaitspeed: 1.1541202<br />steps: 6812.431<br />condition_type: None\",\"gaitspeed: 1.1598538<br />steps: 6860.168<br />condition_type: None\",\"gaitspeed: 1.1655874<br />steps: 6907.905<br />condition_type: None\",\"gaitspeed: 1.1713209<br />steps: 6955.642<br />condition_type: None\",\"gaitspeed: 1.1770545<br />steps: 7003.379<br />condition_type: None\",\"gaitspeed: 1.1827881<br />steps: 7051.116<br />condition_type: None\",\"gaitspeed: 1.1885216<br />steps: 7098.853<br />condition_type: None\",\"gaitspeed: 1.1942552<br />steps: 7146.590<br />condition_type: None\",\"gaitspeed: 1.1999888<br />steps: 7194.327<br />condition_type: None\",\"gaitspeed: 1.2057224<br />steps: 7242.064<br />condition_type: None\",\"gaitspeed: 1.2114559<br />steps: 7289.801<br />condition_type: None\",\"gaitspeed: 1.2171895<br />steps: 7337.538<br />condition_type: None\",\"gaitspeed: 1.2229231<br />steps: 7385.275<br />condition_type: None\",\"gaitspeed: 1.2286566<br />steps: 7433.012<br />condition_type: None\",\"gaitspeed: 1.2343902<br />steps: 7480.748<br />condition_type: None\",\"gaitspeed: 1.2401238<br />steps: 7528.485<br />condition_type: None\",\"gaitspeed: 1.2458573<br />steps: 7576.222<br />condition_type: None\",\"gaitspeed: 1.2515909<br />steps: 7623.959<br />condition_type: None\",\"gaitspeed: 1.2573245<br />steps: 7671.696<br />condition_type: None\",\"gaitspeed: 1.2630581<br />steps: 7719.433<br />condition_type: None\",\"gaitspeed: 1.2687916<br />steps: 7767.170<br />condition_type: None\",\"gaitspeed: 1.2745252<br />steps: 7814.907<br />condition_type: None\",\"gaitspeed: 1.2802588<br />steps: 7862.644<br />condition_type: None\",\"gaitspeed: 1.2859923<br />steps: 7910.381<br />condition_type: None\",\"gaitspeed: 1.2917259<br />steps: 7958.118<br />condition_type: None\",\"gaitspeed: 1.2974595<br />steps: 8005.855<br />condition_type: None\",\"gaitspeed: 1.2974595<br />steps: 8005.855<br />condition_type: None\",\"gaitspeed: 1.2974595<br />steps: 8005.855<br />condition_type: None\",\"gaitspeed: 1.2917259<br />steps: 7958.118<br />condition_type: None\",\"gaitspeed: 1.2859923<br />steps: 7910.381<br />condition_type: None\",\"gaitspeed: 1.2802588<br />steps: 7862.644<br />condition_type: None\",\"gaitspeed: 1.2745252<br />steps: 7814.907<br />condition_type: None\",\"gaitspeed: 1.2687916<br />steps: 7767.170<br />condition_type: None\",\"gaitspeed: 1.2630581<br />steps: 7719.433<br />condition_type: None\",\"gaitspeed: 1.2573245<br />steps: 7671.696<br />condition_type: None\",\"gaitspeed: 1.2515909<br />steps: 7623.959<br />condition_type: None\",\"gaitspeed: 1.2458573<br />steps: 7576.222<br />condition_type: None\",\"gaitspeed: 1.2401238<br />steps: 7528.485<br />condition_type: None\",\"gaitspeed: 1.2343902<br />steps: 7480.748<br />condition_type: None\",\"gaitspeed: 1.2286566<br />steps: 7433.012<br />condition_type: None\",\"gaitspeed: 1.2229231<br />steps: 7385.275<br />condition_type: None\",\"gaitspeed: 1.2171895<br />steps: 7337.538<br />condition_type: None\",\"gaitspeed: 1.2114559<br />steps: 7289.801<br />condition_type: None\",\"gaitspeed: 1.2057224<br />steps: 7242.064<br />condition_type: None\",\"gaitspeed: 1.1999888<br />steps: 7194.327<br />condition_type: None\",\"gaitspeed: 1.1942552<br />steps: 7146.590<br />condition_type: None\",\"gaitspeed: 1.1885216<br />steps: 7098.853<br />condition_type: None\",\"gaitspeed: 1.1827881<br />steps: 7051.116<br />condition_type: None\",\"gaitspeed: 1.1770545<br />steps: 7003.379<br />condition_type: None\",\"gaitspeed: 1.1713209<br />steps: 6955.642<br />condition_type: None\",\"gaitspeed: 1.1655874<br />steps: 6907.905<br />condition_type: None\",\"gaitspeed: 1.1598538<br />steps: 6860.168<br />condition_type: None\",\"gaitspeed: 1.1541202<br />steps: 6812.431<br />condition_type: None\",\"gaitspeed: 1.1483866<br />steps: 6764.694<br />condition_type: None\",\"gaitspeed: 1.1426531<br />steps: 6716.958<br />condition_type: None\",\"gaitspeed: 1.1369195<br />steps: 6669.221<br />condition_type: None\",\"gaitspeed: 1.1311859<br />steps: 6621.484<br />condition_type: None\",\"gaitspeed: 1.1254524<br />steps: 6573.747<br />condition_type: None\",\"gaitspeed: 1.1197188<br />steps: 6526.010<br />condition_type: None\",\"gaitspeed: 1.1139852<br />steps: 6478.273<br />condition_type: None\",\"gaitspeed: 1.1082516<br />steps: 6430.536<br />condition_type: None\",\"gaitspeed: 1.1025181<br />steps: 6382.799<br />condition_type: None\",\"gaitspeed: 1.0967845<br />steps: 6335.062<br />condition_type: None\",\"gaitspeed: 1.0910509<br />steps: 6287.325<br />condition_type: None\",\"gaitspeed: 1.0853174<br />steps: 6239.588<br />condition_type: None\",\"gaitspeed: 1.0795838<br />steps: 6191.851<br />condition_type: None\",\"gaitspeed: 1.0738502<br />steps: 6144.114<br />condition_type: None\",\"gaitspeed: 1.0681167<br />steps: 6096.377<br />condition_type: None\",\"gaitspeed: 1.0623831<br />steps: 6048.641<br />condition_type: None\",\"gaitspeed: 1.0566495<br />steps: 6000.904<br />condition_type: None\",\"gaitspeed: 1.0509159<br />steps: 5953.167<br />condition_type: None\",\"gaitspeed: 1.0451824<br />steps: 5905.430<br />condition_type: None\",\"gaitspeed: 1.0394488<br />steps: 5857.693<br />condition_type: None\",\"gaitspeed: 1.0337152<br />steps: 5809.956<br />condition_type: None\",\"gaitspeed: 1.0279817<br />steps: 5762.219<br />condition_type: None\",\"gaitspeed: 1.0222481<br />steps: 5714.482<br />condition_type: None\",\"gaitspeed: 1.0165145<br />steps: 5666.745<br />condition_type: None\",\"gaitspeed: 1.0107809<br />steps: 5619.008<br />condition_type: None\",\"gaitspeed: 1.0050474<br />steps: 5571.271<br />condition_type: None\",\"gaitspeed: 0.9993138<br />steps: 5523.534<br />condition_type: None\",\"gaitspeed: 0.9935802<br />steps: 5475.797<br />condition_type: None\",\"gaitspeed: 0.9878467<br />steps: 5428.060<br />condition_type: None\",\"gaitspeed: 0.9821131<br />steps: 5380.323<br />condition_type: None\",\"gaitspeed: 0.9763795<br />steps: 5332.587<br />condition_type: None\",\"gaitspeed: 0.9706460<br />steps: 5284.850<br />condition_type: None\",\"gaitspeed: 0.9649124<br />steps: 5237.113<br />condition_type: None\",\"gaitspeed: 0.9591788<br />steps: 5189.376<br />condition_type: None\",\"gaitspeed: 0.9534452<br />steps: 5141.639<br />condition_type: None\",\"gaitspeed: 0.9477117<br />steps: 5093.902<br />condition_type: None\",\"gaitspeed: 0.9419781<br />steps: 5046.165<br />condition_type: None\",\"gaitspeed: 0.9362445<br />steps: 4998.428<br />condition_type: None\",\"gaitspeed: 0.9305110<br />steps: 4950.691<br />condition_type: None\",\"gaitspeed: 0.9247774<br />steps: 4902.954<br />condition_type: None\",\"gaitspeed: 0.9190438<br />steps: 4855.217<br />condition_type: None\",\"gaitspeed: 0.9133102<br />steps: 4807.480<br />condition_type: None\",\"gaitspeed: 0.9075767<br />steps: 4759.743<br />condition_type: None\",\"gaitspeed: 0.9018431<br />steps: 4712.006<br />condition_type: None\",\"gaitspeed: 0.8961095<br />steps: 4664.270<br />condition_type: None\",\"gaitspeed: 0.8903760<br />steps: 4616.533<br />condition_type: None\",\"gaitspeed: 0.8846424<br />steps: 4568.796<br />condition_type: None\",\"gaitspeed: 0.8789088<br />steps: 4521.059<br />condition_type: None\",\"gaitspeed: 0.8731752<br />steps: 4473.322<br />condition_type: None\",\"gaitspeed: 0.8674417<br />steps: 4425.585<br />condition_type: None\",\"gaitspeed: 0.8617081<br />steps: 4377.848<br />condition_type: None\",\"gaitspeed: 0.8559745<br />steps: 4330.111<br />condition_type: None\",\"gaitspeed: 0.8502410<br />steps: 4282.374<br />condition_type: None\",\"gaitspeed: 0.8445074<br />steps: 4234.637<br />condition_type: None\",\"gaitspeed: 0.8445074<br />steps: 4234.637<br />condition_type: None\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":3.7795275590551185,\"color\":\"transparent\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(153,153,153,0.4)\",\"hoveron\":\"points\",\"hoverinfo\":\"x+y\",\"name\":\"None\",\"legendgroup\":\"None\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":54.794520547945211},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Gait speed by step count\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.49408326460000002,1.3357154934],\"tickmode\":\"array\",\"ticktext\":[\"0.5\",\"0.7\",\"0.9\",\"1.1\",\"1.3\"],\"tickvals\":[0.5,0.69999999999999996,0.90000000000000002,1.1000000000000001,1.3],\"categoryorder\":\"array\",\"categoryarray\":[\"0.5\",\"0.7\",\"0.9\",\"1.1\",\"1.3\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Gait speed (m/s)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-422.82164507445123,10317.181983098784],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"2500\",\"5000\",\"7500\",\"10000\"],\"tickvals\":[5.6843418860808015e-14,2500,5000,7500,10000],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"2500\",\"5000\",\"7500\",\"10000\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Number of steps\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Type of condition\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"113c22ea47cc\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"113c7a4a5891\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"113c22ea47cc\",\"visdat\":{\"113c22ea47cc\":[\"function (y) \",\"x\"],\"113c7a4a5891\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nInteractive graph using plotly\n:::\n:::\n\n\n::: {.callout-note}\nHover over the data points above and click on the legend items.\n:::\n\n#### Waffle Plots\n\nIn @sec-viz, we mentioned that pie charts are such a poor way to visualise proportions that we refused to even show you how to make one. Waffle plots are a delicious alternative. \n\n::: {.callout-warning}\nUse <pkg>waffle</pkg> by [hrbrmstr on GitHub](https://github.com/hrbrmstr/waffle/) using the `install_github()` function below, rather than the one on CRAN you get from using `install.packages()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndevtools::install_github(\"hrbrmstr/waffle\")\n```\n:::\n\n\n:::\n\nBy default, `geom_waffle()` represents each observation with a tile and splits these across 10 rows. You can play about with the `n_rows` argument to determine what works best for your data.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction_data %>% \n  count(condition_type) %>%\n  ggplot(aes(fill = condition_type, values = n)) +\n  geom_waffle(\n    n_rows = 8, # try setting this to 10 (the default)\n    size = 0.33, # line size\n    make_proportional = FALSE, # use raw values\n    colour = \"white\", # line colour\n    flip = FALSE, # bottom-top or left-right\n    radius = grid::unit(0.1, \"npc\") # set to 0.5 for circles\n  ) +\n  theme_enhance_waffle() + # gets rid of axes\n  scale_fill_colorblind(name = \"Type of condition\")\n```\n\n::: {.cell-output-display}\n![Waffle plot.](10-custom_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nThe waffle plot can also be used to display the counts as proportions To achieve these, set `n_rows = 10` and `make_proportional = TRUE`. Now, rather than each tile representing one observation, each tile represents 1% of the data. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction_data %>% \n  count(condition_type) %>%\n  ggplot(aes(fill = condition_type, values = n)) +\n  geom_waffle(\n    n_rows = 10, \n    size = 0.33, \n    make_proportional = TRUE, # compute proportions\n    colour = \"white\", \n    flip = FALSE, \n    radius = grid::unit(0.1, \"npc\") \n  ) +\n  theme_enhance_waffle() + \n  scale_fill_colorblind(name = \"Type of condition\")\n```\n\n::: {.cell-output-display}\n![Proportional waffle plot.](10-custom_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n#### Treemap\n\nTreemap plots are another way to visualise proportions. Like the waffle plots, you need to count the data by category first. You can use any [brewer palette](https://www.datanovia.com/en/blog/the-a-z-of-rcolorbrewer-palette/) for the fill. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction_data %>% \n  count(condition_type) %>%\n  treemap(\n    index = \"condition_type\", # column with number of rectangles\n    vSize = \"n\", # column with size of rectangle\n    title = \"\",\n    palette = \"BuPu\",\n    inflate.labels = TRUE # expand labels to size of rectangle\n  )\n```\n\n::: {.cell-output-display}\n![Treemap plot.](10-custom_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nYou can also represent multiple categories with treemaps\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nfunction_data %>% \n  count(condition_type, generalhealth) %>%\n  arrange(generalhealth) %>%\n  treemap(\n    # use c() to specify two variables\n    index = c(\"generalhealth\", \"condition_type\"), \n    vSize = \"n\", \n    title = \"\",\n    palette = \"Dark2\",\n    # set different label sizes for each type of label\n    fontsize.labels = c(30, 10), \n    # set different alignments for two label types\n    align.labels = list(c(\"left\", \"top\"), c(\"center\", \"center\")) \n  )\n```\n\n::: {.cell-output-display}\n![Treemap with two variables](10-custom_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n#### Bump Plots\n\nBump plots are very useful for visualising how rankings change over time. So first, we need to get some ranking data. Let's start with a more typical raw data table, containing an identifying column of `person` and three columns for their scores each week\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# make a small dataset of scores for 3 people over 3 weeks\nscore_data <- tribble(\n  ~person, ~week_1, ~week_2, ~week_3,\n  \"Abeni\",      80,     75,       90,\n  \"Beth\",       75,     85,       75,\n  \"Carmen\",     60,     70,       80\n)\n```\n:::\n\n\nNow we make the table long, group by week, and use the `rank()` function to find the rank of each person's score each week. Use `n() - rank(score) + 1` to reverse the ranks so that the highest score gets rank 1. We also need to make the `week` variable a number.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# calculate ranks\nrank_data <- score_data %>%\n  pivot_longer(cols = -person,\n               names_to = \"week\",\n               values_to = \"score\") %>%\n  group_by(week) %>%\n  mutate(rank = n() - rank(score) + 1) %>%\n  ungroup() %>%\n  arrange(week, rank) %>%\n  mutate(week = str_replace(week, \"week_\", \"\") %>% as.integer())\n\nrank_data\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|person | week| score| rank|\n|:------|----:|-----:|----:|\n|Abeni  |    1|    80|    1|\n|Beth   |    1|    75|    2|\n|Carmen |    1|    60|    3|\n|Beth   |    2|    85|    1|\n|Abeni  |    2|    75|    2|\n|Carmen |    2|    70|    3|\n|Abeni  |    3|    90|    1|\n|Carmen |    3|    80|    2|\n|Beth   |    3|    75|    3|\n\n</div>\n:::\n:::\n\n\nA typical mapping for a bump plot puts the time variable in the x-axis, the rank variable on the y-axis, and sets colour to the identifying variable.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = rank_data, \n       mapping = aes(x = week, \n                     y = rank, \n                     colour = person)) +\n  ggbump::geom_bump()\n```\n\n::: {.cell-output-display}\n![Basic bump plot](10-custom_files/figure-html/basic-bump-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nWe can make this more attractive by customising the axes and adding text labels. Try running each line of this code to see how it builds up.\n\n* Add `label = person` to the mapping so we can add in text labels.\n* Increase the size of the lines with the `size` argument to `geom_bump()`\n* We don't need labels for weeks 1.5 and 2.5, so change the x-axis `breaks`\n* The `expand` argument for the two scale_ functions expands the plot area so we can fit text labels to the right.\n* It makes more sense to have first place at the top, so reverse the order of the y-axis with `scale_y_reverse()` and fix the breaks and expansion.\n* Add text labels with `geom_text()`, but just for week 3, so set `data =  filter(rank_data, week == 3)` for this geom. \n* Set `x = 3.05` to move the text labels just to the right of week 3, and set `hjust = 0` to right-justify the text labels (the default is `hjust = 0.5`, which would center them on 3.05).\n* Remove the legend and grid lines. Increase the x-axis text size.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = rank_data, \n       mapping = aes(x = week, \n                     y = rank, \n                     colour = person,\n                     label = person)) +\n  ggbump::geom_bump(size = 10) +\n  scale_x_continuous(name = \"\",\n                     breaks = 1:3, \n                     labels = c(\"Week 1\", \"Week 2\", \"Week 3\"),\n                     expand = expansion(c(.05, .2))) +\n  scale_y_reverse(name = \"Ranking\",\n                  breaks = 1:3, \n                  expand = expansion(.2)) +\n  geom_text(data = filter(rank_data, week == 3),\n            color = \"black\", x = 3.05, hjust = 0) +\n  theme(legend.position = \"none\",\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.text.x = element_text(size = 12))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Bump plot with added features.](10-custom_files/figure-html/bump-example-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n#### Word Clouds {#sec-word-clouds}\n\nWord clouds are a common way to summarise text data. First, download <a href=\"https://healthteachr.github.io/data/Health_Apps_Review.csv\" download>Health_Apps_Review.csv</a> into your data folder and then load it into an object. This dataset contains  text reviews as well as the 1-5 rating from health app users.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# https://www.kaggle.com/datasets/faysal1998/health-apps-review\nreviews <- rio::import(\"data/Health_Apps_Review.csv\")\n```\n:::\n\n\nWe can use this data to look at how the words used differ depending on the rating given. To make the text data easy to work with, the function `tidytext::unnest_tokens()` splits the words in the `input` column into individual words in a new `output` column. `unnnest_tokens()` is particularly helpful because it also does things like removes punctuation and transforms all words to lower case to make it easier to work with. Compare `words` and `reviews`` to see how they map on to each other.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwords <- reviews %>%\n  unnest_tokens(output = \"word\", input = \"review\")\n```\n:::\n\n\nWe can then add another line of code using a pipe that counts how many instances of each word there is by rating to give us the most popular words.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nwords <- reviews %>%\n  unnest_tokens(output = \"word\", input = \"review\") %>%\n  count(word, rating, sort = TRUE) \n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|word | rating|    n|\n|:----|------:|----:|\n|the  |      1| 1557|\n|i    |      1| 1150|\n|to   |      1| 1132|\n|it   |      1| 1024|\n|and  |      1|  941|\n|the  |      3|  909|\n\n</div>\n:::\n:::\n\n\nThe problem is that the most common words are all function words rather than content words, which makes sense because these words have the highest word frequency in natural language.\n\nHelpfully, `tidytext` contains a list of common \"stop words\", i.e., words that you want to ignore, that are stored in an object named `stop_words`.  It is also very useful to define a list of custom stop words based upon the unique properties of your data (it can sometimes take a few attempts to identify what's appropriate for your dataset). This dataset contains a lot of numbers that aren't informative, and it also contains “http” from website links, so we’ll get rid of both with a custom stop list.\n\nOnce you have defined your stop words, you can then use `anti_join()`  to remove any `word` that is present in the stop word list.\n\nTo get the top 25 words, we then group by rating and use `dplyr::slice_max()`, ordered by the column `n`. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncustom_stop <- tibble(word = c(0:9, \"http\", 2020))\n\nwords <- reviews %>%\n  unnest_tokens(output = \"word\", input = \"review\") %>%\n  count(word, rating) %>%\n  anti_join(stop_words, by = \"word\") %>%\n  anti_join(custom_stop, by = \"word\") %>%\n  group_by(rating) %>%\n  slice_max(order_by = n, n = 25, with_ties = FALSE) %>%\n  ungroup()\n```\n:::\n\n\nFirst, let's make a word cloud for users who gave a 1-star rating:\n\n* Filter retains only the data for 1-star ratings. \n* `label` comes from the `word` column and is the data to plot (i.e., the words).\n* `colour` makes the words red (you could also set this to `word` to give each word a different colour or `n` to vary colour continuously by frequency).\n* `size` makes the size of the word proportional to `n`, the number of times the word appeared.\n* `ggwordcloud::geom_text_wordcloud_area()` is the word cloud geom. \n* `ggwordcloud::scale_size_area()` controls how big the word cloud is (this usually takes some trial-and-error).  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrating1 <- filter(words, rating == 1) %>%\n  ggplot(aes(label = word, colour = \"red\", size = n)) +\n  geom_text_wordcloud_area() +\n  scale_size_area(max_size = 10) +\n  ggtitle(\"Rating = 1\") +\n  theme_minimal(base_size = 14)\n\nrating1\n```\n\n::: {.cell-output-display}\n![](10-custom_files/figure-html/unnamed-chunk-21-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nWe can now do the same but for 5-star ratings and paste the plots together with `patchwork` (word clouds don't play well with facets). \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrating5 <- filter(words, rating == 5) %>%\n  ggplot(aes(label = word, size = n)) +\n  geom_text_wordcloud_area(colour = \"darkolivegreen3\") +\n  scale_size_area(max_size = 15) +\n  ggtitle(\"Rating = 5\") +\n  theme_minimal(base_size = 14)\n\nrating1 + rating5\n```\n\n::: {.cell-output-display}\n![Word cloud.](10-custom_files/figure-html/unnamed-chunk-22-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n::: {.callout-warning}\nIt's worth highlighting that whilst word clouds are very common, they're really the equivalent of pie charts for text data because we're not very good at making accurate comparisons based on size. You might be able to see what's the most popular word, but can you accurately determine the 2nd, 3rd, 4th or 5th most popular word based on the clouds alone? There's also the issue that just because it's text data doesn't make it a qualitative analysis and just because something is said a lot doesn't mean it's useful or important. But, this argument is outwith the scope of this book. \n:::\n\n\n#### Maps\n\nWorking with maps can be tricky. The <pkg>sf</pkg> package provides functions that work with <pkg>ggplot2</pkg>, such as `geom_sf()`. The <pkg>rnaturalearth</pkg> package (and associated data packages that you may be prompted to download) provide high-quality mapping coordinates.\n\n* `ne_countries()` returns world country polygons (i.e., a world map). We specify the object should be returned as a \"simple feature\" class `sf` so that it will work with `geom_sf()`. If you would like a deep dive on simple feature objects, check out a [vignette](https://r-spatial.github.io/sf/articles/sf1.html) from the <pkg>sf</pkg> package.\n* It's worth checking out what the object `ne_countries()` returns to see just how much information is available.\n* Try changing the values and colours below to get a sense of how the code works.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# get the world map coordinates\nworld_sf <- ne_countries(returnclass = \"sf\", scale = \"medium\")\n\n# plot them on a light blue background\nggplot() + \n  geom_sf(data = world_sf, size = 0.3) +\n  theme(panel.background = element_rect(fill = \"lightskyblue2\"))\n```\n\n::: {.cell-output-display}\n![](10-custom_files/figure-html/map-world-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nYou can combine multiple countries using `bind_rows()` and visualise them with different colours for each country.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# get and bind country data\ninstall.packages('rnaturalearthhires', repos = c('https://ropensci.r-universe.dev', 'https://cloud.r-project.org'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into 'C:/Users/osm25/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(\"rnaturalearthhires\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'rnaturalearthhires' was built under R version 4.4.2\n```\n\n\n:::\n\n```{.r .cell-code}\nuk_sf <- ne_states(country = \"united kingdom\", returnclass = \"sf\")\nireland_sf <- ne_states(country = \"ireland\", returnclass = \"sf\")\nislands <- bind_rows(uk_sf, ireland_sf) %>%\n  filter(!is.na(geonunit))\n\n# set colours\ncountry_colours <- c(\"Scotland\" = \"#0962BA\",\n                     \"Wales\" = \"#00AC48\",\n                     \"England\" = \"#FF0000\",\n                     \"Northern Ireland\" = \"#FFCD2C\",\n                     \"Ireland\" = \"#F77613\")\n\nggplot() + \n  geom_sf(data = islands,\n          mapping = aes(fill = geonunit),\n          colour = NA,\n          alpha = 0.75) +\n  coord_sf(crs = sf::st_crs(4326),\n           xlim = c(-10.7, 2.1), \n           ylim = c(49.7, 61)) +\n  scale_fill_manual(name = \"Country\", \n                    values = country_colours)\n```\n\n::: {.cell-output-display}\n![Map coloured by country.](10-custom_files/figure-html/map-islands-1.png){fig-align='center' width=100%}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'rnaturalearthhires' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\local_osm25\\Temp\\RtmpKoPG79\\downloaded_packages\n```\n\n\n:::\n:::\n\n\n\nYou can join <a href=\"https://healthteachr.github.io/data/scottish_population.csv\" download>Scottish population data</a> to the map table to visualise data on the map using colours or labels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load map data\nscotland_sf <- ne_states(geounit = \"Scotland\", \n                         returnclass = \"sf\")\n\n# load population data from\n# https://www.indexmundi.com/facts/united-kingdom/quick-facts/scotland/population\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\n# join data and fix typo in the map\nscotmap_pop <- scotland_sf %>%\n  mutate(name = ifelse(name == \"North Ayshire\", \n                       yes = \"North Ayrshire\", \n                       no = name)) %>%\n  left_join(scotpop, by = \"name\") %>%\n  select(name, population, geometry)\n```\n:::\n\n\n::: {.callout-warning}\nThere is a typo in the data from <pkg>rnaturalearth</pkg>, so you need to change \"North Ayshire\" to \"North Ayrshire\" before you join the population data.\n:::\n\n* Setting the fill to population in `geom_sf()` gives each region a colour based on its population. \n* The colours are customised with `scale_fill_viridis_c()`. The breaks of the fill scale are set to increments of 100K (1e5 in scientific notation) and the scale is set to span 0 to 600K. \n* `paste0()` creates the labels by taking the numbers 0 through 6 and adding \"00 k\" to them.\n* Finally, the position of the legend is moved into the sea using `legend.position()`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# plot\nggplot() + \n  geom_sf(data = scotmap_pop,\n          mapping = aes(fill = population),\n          color = \"white\", \n          size = .1) +\n  coord_sf(xlim = c(-8, 0), ylim = c(54, 61)) +\n  scale_fill_viridis_c(name = \"Population\",\n                       breaks = seq(from = 0, to = 6e5, by = 1e5), \n                       limits = c(0, 6e5),\n                       labels = paste0(0:6, \"00 K\")) +\n  theme(legend.position = c(0.16, 0.84))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Map coloured by population.](10-custom_files/figure-html/map-scotland-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n#### Animated Plots\n\nAnimated plots are a great way to add a wow factor to your reports, but they can be complex to make, distracting, and not very accessible, so use them sparingly and only for data visualisation where the animation really adds something. The package <pkg>gganimate\", \"https://gganimate.com/\")` has many functions for animating ggplots.\n\nHere, we'll load some population data from the United Nations. <a href=\"data/WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES.xlsx\" download>Download the file</a> into your data folder and open it in Excel first to see what it looks like. The code below gets the data from the first tab, filters it to just the 6 world regions, makes the data long, and makes sure the `year` column is numeric and the `pop` column shows population in whole numbers (the original data is in 1000s).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load and process data\nworldpop <- readxl::read_excel(\"data/WPP2019_POP_F01_1_TOTAL_POPULATION_BOTH_SEXES.xlsx\", skip = 16) %>%\n  filter(Type == \"Region\") %>%\n  select(region = 3, `1950`:`1992`) %>%\n  pivot_longer(cols = -region, \n               names_to = \"year\",\n               values_to = \"pop\") %>%\n  mutate(year = as.integer(year),\n         pop = round(1000 * as.numeric(pop)))\n```\n:::\n\n\nLet's make an animated plot showing how the population in each region changes with year. First, make a static plot. Filter the data to the most recent year so you can see what a single frame of the animation will look like.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nworldpop %>%\n  filter(year == 1992) %>%\n  ggplot(aes(x = region, y = pop, fill = region)) +\n  geom_col(show.legend = FALSE) +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\", \n                   guide = guide_axis(n.dodge=2))+\n  scale_y_continuous(name = \"Population\",\n                     breaks = seq(0, 3e9, 1e9),\n                     labels = paste0(0:3, \"B\")) +\n  ggtitle('Year: 1992')\n```\n\n::: {.cell-output-display}\n![](10-custom_files/figure-html/unnamed-chunk-25-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nTo convert this to an animated plot that shows the data from multiple years:\n\n* Remove the filter and add `transition_time(year)`. \n* Use the `{}` syntax to include the `frame_time` in the title. \n* Use `anim_save()` to save the animation to a GIF file and set this code chunk to `eval = FALSE` because creating an animation takes a long time and you don't want to have to run it every time you knit your report.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(gifski)\nanim <- worldpop %>%\n  ggplot(aes(x = region, y = pop, fill = region)) +\n  geom_col(show.legend = FALSE) +\n  scale_fill_viridis_d() +\n  scale_x_discrete(name = \"\",\n                   guide = guide_axis(n.dodge=2))+\n  scale_y_continuous(name = \"Population\",\n                     breaks = seq(0, 3e9, 1e9),\n                     labels = paste0(0:3, \"B\")) +\n  ggtitle('Year: {frame_time}') +\n  transition_time(year)\n  \ndir.create(\"images\", FALSE) # creates an images directory if needed\n\nanim_save(animation = anim,\n          width = 8, height = 5, units = \"in\", res = 150,renderer = gifski_renderer(),\n          filename = \"images/gganim-demo.gif\")\n```\n:::\n\n\nYou can show your animated gif in an html report (animations don't work in Word or a PDF) using `include_graphics()`, or include the GIF in a dynamic document like PowerPoint.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nknitr::include_graphics(\"images/gganim-demo.gif\")\n```\n\n::: {.cell-output-display}\n![Animated gif.](images/gganim-demo.gif){fig-align='center' width=100%}\n:::\n:::\n\n\n\n::: {.callout-warning}\nThere are actually not many plots that are really improved by animating them. The plot below gives the same information at a single glance.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](10-custom_files/figure-html/anim-alternative-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n\n### Resources  {#sec-resources-custom}\n\nThere are so many more options for data visualisation in R than we have time to cover here. The following resources will get you started on your journey to informative, intuitive visualisations.\n\n* [The R Graph Gallery](http://www.r-graph-gallery.com/) (this is really useful)\n* [Look at Data](https://socviz.co/lookatdata.html) from [Data Vizualization for Social Science](http://socviz.co/)\n* [Graphs](http://www.cookbook-r.com/Graphs) in *Cookbook for R*\n* [Top 50 ggplot2 Visualizations](http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html)\n* [R Graphics Cookbook](http://www.cookbook-r.com/Graphs/) by Winston Chang\n* [ggplot extensions](https://exts.ggplot2.tidyverse.org/)\n* [plotly](https://plot.ly/ggplot2/) for creating interactive graphs\n* [Drawing Beautiful Maps Programmatically](https://r-spatial.org/r/2018/10/25/ggplot2-sf.html)\n* [gganimate](https://gganimate.com/)\n\n\n## Reports {#sec-custom-reports}\n\n### Set-up {#sec-setup-custom-reports}\n\nClose your visualisation Markdown and open and save a new R Markdown document named `reports.Rmd`, delete the welcome text and load the required packages for this section.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#remove.packages(\"rlang\")\n#install.packages(\"rlang\")\n#library(rlang)\n#remove.packages(\"flexdashboard\")\n#install.packages(\"flexdashboard\")\nlibrary(tidyverse)     # data wrangling functions\nlibrary(bookdown)      # for chaptered reports\nlibrary(flexdashboard) # for dashboards\nlibrary(DT)            # for interactive tables\n```\n:::\n\n\nYou'll need to make a folder called \"data\" and download data files into it: \n<a href=\"https://healthteachr.github.io/data/Health_Apps_Review.csv\" download>Health_Apps_Review.csv</a> and <a href=\"https://healthteachr.github.io/data/scottish_population.csv\" download>scottish_population.csv</a>.\n\n### Linked documents {#sec-linked-docs}\n\nIf you need to create longer reports with links between sections, you can edit the YAML to use a bookdown format. `bookdown::html_document2` is a useful one that adds figure and table numbers automatically to any figures or tables with a caption and allows you to link to these by reference.\n\nTo create links to tables and figures, you need to name the code chunk that created your figures or tables, and then call those names in your inline coding:\n\n\n::: {.cell layout-align=\"center\" verbatim='r tab-my-table'}\n<div class='verbatim'><pre class='sourceCode r'><code class='sourceCode R'>&#96;&#96;&#96;{r tab-my-table}</code></pre>\n\n```{.r .cell-code}\n# table code here\n```\n\n<pre class='sourceCode r'><code class='sourceCode R'>&#96;&#96;&#96;</code></pre></div>\n:::\n\n::: {.cell layout-align=\"center\" verbatim='r fig-my-figure'}\n<div class='verbatim'><pre class='sourceCode r'><code class='sourceCode R'>&#96;&#96;&#96;{r fig-my-figure}</code></pre>\n\n```{.r .cell-code}\n# figure code here\n```\n\n<pre class='sourceCode r'><code class='sourceCode R'>&#96;&#96;&#96;</code></pre></div>\n:::\n\n\n```\nSee @tab-my-table or @fig-my-figure.\n```\n\n::: {.callout-warning}\nThe code chunk names can only contain letters, numbers and dashes. If they contain other characters like spaces or underscores, the referencing will not work.\n:::\n\nYou can also link to different sections of your report by naming your headings with `{#sec-}`:\n\n``` md\n# My first heading {#sec-heading-1}\n\n## My second heading {#sec-heading-2}\n\nSee @sec-heading-1 and @sec-heading-2.\n\n```\nThe code below shows how to link text to figures or tables in a full report using the built-in `diamonds` dataset - use your `reports.Rmd` to create this document now. You can see the [HTML output here](demos/html_document2.html).\n\n\n<div class='webex-solution'><button>Linked document code</button>\n\n\n\n\n````{.md}\n---\ntitle: \"Linked Document Demo\"\noutput: \n  bookdown::html_document2:\n    number_sections: true\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE,\n                      message = FALSE,\n                      warning = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\ntheme_set(theme_minimal())\n```\n\nDiamond price depends on many features, such as:\n\n- cut (See @tab-tab:by-cut))\n- colour (See @tab-tab:by-colour))\n- clarity (See @fig-by-clarity))\n- carats (See @fig-by-carat))\n- See @sec-conclusion) for concluding remarks\n\n## Tables\n\n### Cut\n\n```{r by-cut}\ndiamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_material()\n```\n\n### Colour\n\n```{r by-colour}\ndiamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by colour.\") %>%\n  kable_material()\n```\n\n## Plots\n\n### Clarity\n\n```{r by-clarity, fig.cap = \"Diamond price by clarity\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n### Carats\n\n```{r by-carat, fig.cap = \"Diamond price by carat\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```\n\n### Concluding remarks {#sec-conclusion}\n\nI am not rich enough to worry about any of this.\n````\n\n\n\n</div>\n\n\nThis format defaults to numbered sections, so set `number_sections: false` in the <a href='https://psyteachr.github.io/glossary/y#yaml' target='_blank' class='glossary' title='A structured format for information'>YAML</a> header if you don't want this. If you remove numbered sections, links like `@sec-conclusion)` will show \"??\", so you need to use URL link syntax instead, like this:\n\n```\nSee the [last section](#conclusion) for concluding remarks.\n```\n\n### References {#sec-references}\n\nThere are several ways to do in-text references and automatically generate a [bibliography](https://bookdown.org/yihui/rmarkdown-cookbook/bibliography.html){target=\"_blank\"} in R Markdown. Markdown files need to link to a BibTex file (a plain text file with references in a specific format) that contains the references you need to cite. You specify the name of this file in the YAML header, like `bibliography: filename.bib` and cite references in text using an at symbol and a shortname, like `[@tidyverse]`.\n\n#### Creating a BibTeX file\n\nMost reference software like EndNote, Zotero or Mendeley have exporting options that can export to BibTeX format. You just need to check the shortnames in the resulting file.\n\nYou can also make a BibTeX file and add references manually. In RStudio, go to <if>File > New File... > Text File</if> and save the file as \"bibliography.bib\".\n\nNext, add the line `bibliography: bibliography.bib` to your YAML header.\n\n#### Adding references\n\nYou can add references to a journal article in the following format:\n\n```\n@article{shortname,\n  author = {Author One and Author Two and Author Three},\n  title = {Paper Title},\n  journal = {Journal Title},\n  volume = {vol},\n  number = {issue},\n  pages = {startpage--endpage},\n  year = {year},\n  doi = {doi}\n}\n```\n\nSee [A complete guide to the BibTeX format](https://www.bibtex.com/g/bibtex-format/){target=\"_blank\"} for instructions on citing books, technical reports, and more.\n\nYou can get the reference for an R package using the functions `citation()` and `toBibtex()`. You can paste the bibtex entry into your bibliography.bib file. Make sure to add a short name (e.g., \"ggplot2\") before the first comma to refer to the reference.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncitation(package=\"ggplot2\") %>% toBibtex()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n@Book{,\n  author = {Hadley Wickham},\n  title = {ggplot2: Elegant Graphics for Data Analysis},\n  publisher = {Springer-Verlag New York},\n  year = {2016},\n  isbn = {978-3-319-24277-4},\n  url = {https://ggplot2.tidyverse.org},\n}\n```\n\n\n:::\n:::\n\n\n\n[Google Scholar](https://scholar.google.com/) entries have a BibTeX citation option. This is usually the easiest way to get the relevant values, although you have to add the DOI yourself. You can keep the suggested shortname or change it to something that makes more sense to you.\n\n\n::: {.cell layout-align=\"center\" fi.caption='Get BibTex citations from Google Scholar.'}\n::: {.cell-output-display}\n![](images/present/google-scholar.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n#### Citing references\n\nYou can cite references in text like this: \n\n```\nThis tutorial uses several R packages [@tidyverse;@rmarkdown].\n```\n\nThis tutorial uses several R packages [@tidyverse;@rmarkdown].\n\nPut a minus in front of the @ if you just want the year:\n\n```\nFranconeri and colleagues [-@franconeri2021science] review research-backed guidelines for creating effective and intuitive visualizations.\n```\n\nFranconeri and colleagues [-@franconeri2021science] review research-backed guidelines for creating effective and intuitive visualizations.\n\n#### Citation styles\n\nYou can search a [list of style files](https://www.zotero.org/styles){target=\"_blank\"} (e.g., APA, MLA, Harvard) and download a file that will format your bibliography. You'll need to add the line `csl: filename.csl` to your YAML header. \n\n#### Reference section\n\nBy default, the reference section is added to the end of the document. If you want to change the position (e.g., to add figures and tables after the references), include `<div id=\"refs\"></div>` where you want the references. \n\n::: {.callout-note .try}\nAdd in-text citations and a reference list to your report.\n:::\n\n### Interactive tables\n\nOne way to make your reports more exciting is to use interactive tables. The `DT::datatable()` function displays a table with some extra interactive elements to allow readers to search and reorder the data, as well as controlling the number of rows shown at once. This can be especially helpful. This only works with HTML output types. The [DT website](https://rstudio.github.io/DT/){target=\"_blank\"} has extensive tutorials, but we'll cover the basics here.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(DT)\n\nscotpop <- read_csv(\"data/scottish_population.csv\", \n                    show_col_types = FALSE)\n\ndatatable(data = scotpop)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6b0ec796eaf12834699a\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6b0ec796eaf12834699a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\"],[\"Aberdeen\",\"Aberdeenshire\",\"Angus\",\"Argyll and Bute\",\"Edinburgh\",\"Clackmannanshire\",\"Dumfries and Galloway\",\"Dundee\",\"East Ayrshire\",\"East Dunbartonshire\",\"East Lothian\",\"East Renfrewshire\",\"Eilean Siar\",\"Falkirk\",\"Fife\",\"Glasgow\",\"Highland\",\"Inverclyde\",\"Midlothian\",\"Moray\",\"North Ayrshire\",\"North Lanarkshire\",\"Orkney\",\"Perthshire and Kinross\",\"Renfrewshire\",\"Scottish Borders\",\"Shetland Islands\",\"South Ayrshire\",\"South Lanarkshire\",\"Stirling\",\"West Dunbartonshire\",\"West Lothian\"],[217120,245780,110570,89200,486120,50630,148190,144290,120240,104580,97500,89540,26190,153280,365020,592820,221630,79770,81140,87720,135180,326360,20110,147780,170250,112870,22400,111440,311880,89850,90570,172080]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>name<\\/th>\\n      <th>population<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"name\",\"targets\":1},{\"name\":\"population\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nYou can customise the display, such as changing column names, adding a caption, moving the location of the filter boxes, removing row names, applying [classes](https://datatables.net/manual/styling/classes){target=\"_blank\"} to change table appearance, and applying [advanced options](https://datatables.net/reference/option/){target=\"_blank\"}.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# https://datatables.net/reference/option/\nmy_options <- list(\n  pageLength = 5, # how many rows are displayed\n  lengthChange = FALSE, # whether pageLength can change\n  info = TRUE, # text with the total number of rows\n  paging = TRUE, # if FALSE, the whole table displays\n  ordering = FALSE, # whether you can reorder columns\n  searching = FALSE # whether you can search the table\n)\n\ndatatable(\n  data = scotpop,\n  colnames = c(\"County\", \"Population\"),\n  caption = \"The population of Scottish counties.\",\n  filter = \"none\", # \"none\", \"bottom\" or \"top\"\n  rownames = FALSE, # removes the number at the left\n  class = \"cell-border hover stripe\", # default is \"display\"\n  options = my_options\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-2187ed817b2e4857d5ae\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2187ed817b2e4857d5ae\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>The population of Scottish counties.<\\/caption>\",\"data\":[[\"Aberdeen\",\"Aberdeenshire\",\"Angus\",\"Argyll and Bute\",\"Edinburgh\",\"Clackmannanshire\",\"Dumfries and Galloway\",\"Dundee\",\"East Ayrshire\",\"East Dunbartonshire\",\"East Lothian\",\"East Renfrewshire\",\"Eilean Siar\",\"Falkirk\",\"Fife\",\"Glasgow\",\"Highland\",\"Inverclyde\",\"Midlothian\",\"Moray\",\"North Ayrshire\",\"North Lanarkshire\",\"Orkney\",\"Perthshire and Kinross\",\"Renfrewshire\",\"Scottish Borders\",\"Shetland Islands\",\"South Ayrshire\",\"South Lanarkshire\",\"Stirling\",\"West Dunbartonshire\",\"West Lothian\"],[217120,245780,110570,89200,486120,50630,148190,144290,120240,104580,97500,89540,26190,153280,365020,592820,221630,79770,81140,87720,135180,326360,20110,147780,170250,112870,22400,111440,311880,89850,90570,172080]],\"container\":\"<table class=\\\"cell-border hover stripe\\\">\\n  <thead>\\n    <tr>\\n      <th>County<\\/th>\\n      <th>Population<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"lengthChange\":false,\"info\":true,\"paging\":true,\"ordering\":false,\"searching\":false,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"name\":\"name\",\"targets\":0},{\"name\":\"population\",\"targets\":1}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n::: {.callout-note .try}\nCreate an interactive table like the one below from the `diamonds` dataset of diamonds where the `table` value is greater than 65 (the whole table is *much* too large to display with an interactive table). Show 20 items by default and remove the search box, but leave in the filter and other default options.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-4fd3e76320f482df8de4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4fd3e76320f482df8de4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>All diamonds with table &gt; 65.<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\"],[0.86,0.84,0.7,0.76,0.57,0.74,0.91,0.98,0.75,0.72,0.9,0.75,0.99,0.98,1.06,0.85,0.73,1.2,0.91,1,0.95,0.9,0.9,0.99,0.9,1.01,0.98,0.96,1,1.01,1.01,1.17,1.18,0.9,1,1.01,0.9,1,0.9399999999999999,0.97,0.31,0.91,1.05,1.45,1,0.51,1.07,0.9,0.91,1.18,1.07,1.45,1.13,1.17,0.3,1,1.01,0.93,1.01,1,1.65,1.14,1.5,1.16,1.42,1.24,2.01,1.44,1.57,1.5,1.51,1.52,1.53,1.76,1.55,1.51,1.52,1,1.51,1.5,1.51,2,2.1,1.91,2,1.32,2.29,1.98,1.51,2.01,2.01,2.29,2.01,2.48,2.01,0.23,2.1,0.23,0.3,0.45,0.36,0.5,0.5,0.23,0.46,0.3,0.4,0.43,0.46,0.5,0.54,0.5,0.7,0.5,0.5,0.49,0.5600000000000001,0.5,0.51,0.89,0.5,0.52,0.64,0.52,0.67,0.68,0.62,0.67,0.7,0.53,0.5,0.5600000000000001,0.57,0.75,0.71,0.71,0.7,0.75,0.73,0.96,0.7,0.5,0.75,0.77,0.74,0.7,0.7,0.7,0.7,0.77,0.6899999999999999,0.7,0.9,0.6,0.71,0.7,0.6899999999999999,0.77,0.8100000000000001,0.71,0.76,0.73,0.62,0.7,0.79,0.71,0.7,1.05,0.71,0.6,0.82,0.76,0.97,0.88,0.5,0.5,0.89,0.72,0.71,0.78,0.71],[\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Very Good\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Fair\",\"Faircontainer\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>carat<\\/th>\\n      <th>cut<\\/th>\\n      <th>color<\\/th>\\n      <th>clarity<\\/th>\\n      <th>depth<\\/th>\\n      <th>price<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"searching\":false,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"carat\",\"targets\":1},{\"name\":\"cut\",\"targets\":2},{\"name\":\"color\",\"targets\":3},{\"name\":\"clarity\",\"targets\":4},{\"name\":\"depth\",\"targets\":5},{\"name\":\"price\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,20,25,50,100]},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell layout-align=\"center\" webex.hide='true'}\n::: {.callout-note collapse='true'}\n## Solution\n\n```{.r .cell-code}\nmy_options <- list(\n  pageLength = 20, # how many rows are displayed\n  searching = FALSE # whether you can search the table\n)\n\ndiamonds %>% \n  filter(table > 65) %>%\n  select(-table, -(x:z)) %>%\n  DT::datatable(\n    caption = \"All diamonds with table > 65.\",\n    options = my_options\n  )\n```\n\n:::\n:::\n\n:::\n\n\n\n### Other formats\n\nYou can create more than just reports with R Markdown. You can also create presentations, interactive dashboards, books, websites, and web applications.\n\n#### Presentations\n\nYou can choose a presentation template when you create a new R Markdown document. We'll use ioslides for this example, but the other formats work similarly.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Ioslides RMarkdown template.](images/present/new-ioslides.png){fig-align='center' width=100%}\n:::\n:::\n\n\nThe main differences between this and the Rmd files you've been working with until now are that the `output` type in the <a href='https://psyteachr.github.io/glossary/y#yaml' target='_blank' class='glossary' title='A structured format for information'>YAML</a> header is `ioslides_presentation` instead of `html_document` and this format requires a specific title structure. Each slide starts with a level-2 header.\n\nThe template provides you with examples of text, bullet point, code, and plot slides. You can knit this template to create an <a href='https://psyteachr.github.io/glossary/h#html' target='_blank' class='glossary' title='Hyper-Text Markup Language: A system for semantically tagging structure and information on web pages.'>HTML</a> document with your presentation. It often looks odd in the RStudio built-in browser, so click the button to open it in a web browser. You can use the space bar or arrow keys to advance slides.\n\nThe code below shows how to load some packages and display text, a table, and a plot. You can see the [HTML output here](demos/ioslides.html).\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n\n\n````{.md}\n---\ntitle: \"Presentation Demo\"\nauthor: \"Lisa DeBruine\"\noutput: ioslides_presentation\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\nlibrary(tidyverse)\nlibrary(kableExtra)\n```\n\n## Slide with Markdown\n\nThe following slides will present some data from the `diamonds` dataset from **ggplot2**.\n\nDiamond price depends on many features, such as:\n\n- cut\n- colour\n- clarity\n- carats\n\n## Slide with a Table\n\n```{r}\ndiamonds %>%\n  group_by(cut, color) %>%\n  summarise(avg_price = mean(price),\n            .groups = \"drop\") %>%\n  pivot_wider(names_from = cut, values_from = avg_price) %>%\n  kable(digits = 0, caption = \"Mean diamond price by cut and colour.\") %>%\n  kable_material()\n```\n\n## Slide with a Plot\n\n```{r pressure}\nggplot(diamonds, aes(x = cut, y = price, color = color)) +\n  stat_summary(fun = mean, geom = \"point\") +\n  stat_summary(aes(x = as.integer(cut)), \n               fun = mean, geom = \"line\") +\n  scale_x_discrete(position = \"top\") +\n  scale_color_viridis_d(guide = guide_legend(reverse = TRUE)) +\n  theme_minimal() \n```\n\n````\n\n\n\n</div>\n\n\n#### Dashboards\n\nDashboards are a way to display text, tables, and plots with dynamic formatting. After you install <pkg>flexdashboard</pkg>, you can choose a flexdashboard template when you create a new R Markdown document. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Flexdashboard RMarkdown template.](images/present/flexdashboard-template.png){fig-align='center' width=100%}\n:::\n:::\n\n\nThe code below shows how to load some packages, display two tables in a tabset, and display two plots in a column. You can see the [HTML output here](demos/flexdashboard.html).\n\n\n<div class='webex-solution'><button>Solution</button>\n\n\n\n\n````{.md}\n---\ntitle: \"Flexdashboard Demo\"\noutput: \n  flexdashboard::flex_dashboard:\n    social: [ \"twitter\", \"facebook\", \"linkedin\", \"pinterest\" ]\n    source_code: embed\n    orientation: columns\n    vertical_layout: fill\n---\n\n```{r setup, include=FALSE}\nlibrary(flexdashboard)\nlibrary(tidyverse)\nlibrary(kableExtra)\nlibrary(DT) # for interactive tables\ntheme_set(theme_minimal())\n```\n\nColumn {data-width=350, .tabset}\n--------------------------------\n\n### By Cut\n\nThis table uses `kableExtra` to render the table with a specific theme.\n\n```{r}\ndiamonds %>%\n  group_by(cut) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  kable(digits = 0, \n        col.names = c(\"Cut\", \"Average Price\"),\n        caption = \"Mean diamond price by cut.\") %>%\n  kable_classic()\n```\n\n### By Colour\n\nThis table uses `DT::datatable()` to render the table with a searchable interface.\n\n```{r}\ndiamonds %>%\n  group_by(color) %>%\n  summarise(avg = mean(price),\n            .groups = \"drop\") %>%\n  DT::datatable(colnames = c(\"Colour\", \"Average Price\"), \n                caption = \"Mean diamond price by colour\",\n                options = list(pageLength = 5),\n                rownames = FALSE) %>%\n  DT::formatRound(columns=2, digits=0)\n```\n\nColumn {data-width=350}\n-----------------------\n\n### By Clarity\n\n```{r by-clarity, fig.cap = \"Diamond price by clarity\"}\nggplot(diamonds, aes(x = clarity, y = price)) +\n  geom_boxplot() \n```\n\n\n### By Carats\n\n```{r by-carat, fig.cap = \"Diamond price by carat\"}\nggplot(diamonds, aes(x = carat, y = price)) +\n  stat_smooth()\n```\n\n````\n\n\n\n</div>\n\n\nChange the size of your web browser to see how the boxes, tables and figures change.\n\nThe best way to figure out how to format a dashboard is trial and error, but you can also look at some [sample layouts](https://pkgs.rstudio.com/flexdashboard/articles/layouts.html){target=\"_blank\"}.\n\n#### Books\n\nYou can create online books with <pkg>bookdown</pkg>. In fact, the book you're reading was created using bookdown. After you download the package, start a new project and choose \"Book project using bookdown\" from the list of project templates. \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Bookdown project template.](images/present/bookdown.png){fig-align='center' width=100%}\n:::\n:::\n\n\nEach chapter is written in a separate .Rmd file and the general book settings can be changed in the `_bookdown.yml` and `_output.yml` files. \n\n#### Websites\n\nYou can create a simple website the same way you create any R Markdown document. Choose \"Simple R Markdown Website\" from the project templates to get started. See @sec-webpages for a step-by-step tutorial.\n\nFor more complex, blog-style websites, you can investigate [<pkg>blogdown</pkg>](https://bookdown.org/yihui/blogdown/). After you install this package, you will also be able to create template blogdown projects to get you started.\n\n#### Shiny\n\nTo get truly interactive, you can take your R coding to the next level and learn Shiny. Shiny apps let your R code react to user input. You can do things like [make a word cloud](https://shiny.psy.gla.ac.uk/debruine/wordcloud/), [search a google spreadsheet](https://shiny.psy.gla.ac.uk/debruine/seen/), or [conduct a survey](https://shiny.psy.gla.ac.uk/debruine/question/).\n\nThis is well outside the scope of this class, but the skills you've learned here provide a good start. The following free book [Building Web Apps with R Shiny](https://debruine.github.io/shinyintro/) can get you started creating shiny apps.\n\n### Resources {#sec-resources-report}\n\n* [RStudio Formats](https://rmarkdown.rstudio.com/formats.html)\n* [R Markdown Cookbook](https://bookdown.org/yihui/rmarkdown-cookbook)\n* [DT](https://rstudio.github.io/DT/)\n* [Flexdashboard](https://pkgs.rstudio.com/flexdashboard/)\n* [Bookdown](https://bookdown.org/yihui/bookdown/)\n* [Blogdown](https://bookdown.org/yihui/blogdown/)\n* [Shiny](https://shiny.rstudio.com/)\n* [Building Web Apps with R Shiny](https://debruine.github.io/shinyintro/)\n\n\n<hr>\n\n## Course Complete\n\nAnd so, we are done. We've covered a huge amount over the course of Applied Data Skills, and whilst you're likely more comfortable with some bits than others, the skills you have developed are truly impressive. Even if you go no further than what you've learned in this book, you can now work reproducibly to produce informative summaries and visualisations that provide new insights into your data and reduce human error. \n\nBut it's also important to recognise that your knowledge of R will never be complete. In the course of writing this book, the entire ADS team have learned new functions, new arguments, new approaches, and new reasons to love or loathe certain data visualisations. The flexibility and possibility of R is what makes it frustrating and empowering in equal measure. What we hope more than anything is that Applied Data Skills is the start of your journey with R, not the end. Please keep in touch, we'd love to see where it takes you.\n\nOlivia Malkowski,  \nSean Williams,  \nJames Fern\n",
    "supporting": [
      "10-custom_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}